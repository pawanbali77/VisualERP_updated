#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NewVisualERP")]
public partial class VisualERPDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Inserttbl_Assembly(tbl_Assembly instance);
  partial void Updatetbl_Assembly(tbl_Assembly instance);
  partial void Deletetbl_Assembly(tbl_Assembly instance);
  partial void Inserttbl_AttributesMenu(tbl_AttributesMenu instance);
  partial void Updatetbl_AttributesMenu(tbl_AttributesMenu instance);
  partial void Deletetbl_AttributesMenu(tbl_AttributesMenu instance);
  partial void Inserttbl_BOM(tbl_BOM instance);
  partial void Updatetbl_BOM(tbl_BOM instance);
  partial void Deletetbl_BOM(tbl_BOM instance);
  partial void Inserttbl_BomProcess(tbl_BomProcess instance);
  partial void Updatetbl_BomProcess(tbl_BomProcess instance);
  partial void Deletetbl_BomProcess(tbl_BomProcess instance);
  partial void Inserttbl_BomTypeCollection(tbl_BomTypeCollection instance);
  partial void Updatetbl_BomTypeCollection(tbl_BomTypeCollection instance);
  partial void Deletetbl_BomTypeCollection(tbl_BomTypeCollection instance);
  partial void Inserttbl_BusinessSegment(tbl_BusinessSegment instance);
  partial void Updatetbl_BusinessSegment(tbl_BusinessSegment instance);
  partial void Deletetbl_BusinessSegment(tbl_BusinessSegment instance);
  partial void Inserttbl_BusinessUnit(tbl_BusinessUnit instance);
  partial void Updatetbl_BusinessUnit(tbl_BusinessUnit instance);
  partial void Deletetbl_BusinessUnit(tbl_BusinessUnit instance);
  partial void Inserttbl_Bussiness(tbl_Bussiness instance);
  partial void Updatetbl_Bussiness(tbl_Bussiness instance);
  partial void Deletetbl_Bussiness(tbl_Bussiness instance);
  partial void Inserttbl_Calibration(tbl_Calibration instance);
  partial void Updatetbl_Calibration(tbl_Calibration instance);
  partial void Deletetbl_Calibration(tbl_Calibration instance);
  partial void Inserttbl_DefalutAttributeMenu(tbl_DefalutAttributeMenu instance);
  partial void Updatetbl_DefalutAttributeMenu(tbl_DefalutAttributeMenu instance);
  partial void Deletetbl_DefalutAttributeMenu(tbl_DefalutAttributeMenu instance);
  partial void Inserttbl_DocumentLinkType(tbl_DocumentLinkType instance);
  partial void Updatetbl_DocumentLinkType(tbl_DocumentLinkType instance);
  partial void Deletetbl_DocumentLinkType(tbl_DocumentLinkType instance);
  partial void Inserttbl_HandOffData(tbl_HandOffData instance);
  partial void Updatetbl_HandOffData(tbl_HandOffData instance);
  partial void Deletetbl_HandOffData(tbl_HandOffData instance);
  partial void Inserttbl_InformationInput(tbl_InformationInput instance);
  partial void Updatetbl_InformationInput(tbl_InformationInput instance);
  partial void Deletetbl_InformationInput(tbl_InformationInput instance);
  partial void Inserttbl_InputType(tbl_InputType instance);
  partial void Updatetbl_InputType(tbl_InputType instance);
  partial void Deletetbl_InputType(tbl_InputType instance);
  partial void Inserttbl_InvantoryTriangle(tbl_InvantoryTriangle instance);
  partial void Updatetbl_InvantoryTriangle(tbl_InvantoryTriangle instance);
  partial void Deletetbl_InvantoryTriangle(tbl_InvantoryTriangle instance);
  partial void Inserttbl_MachineList(tbl_MachineList instance);
  partial void Updatetbl_MachineList(tbl_MachineList instance);
  partial void Deletetbl_MachineList(tbl_MachineList instance);
  partial void Inserttbl_ParallelRelationship(tbl_ParallelRelationship instance);
  partial void Updatetbl_ParallelRelationship(tbl_ParallelRelationship instance);
  partial void Deletetbl_ParallelRelationship(tbl_ParallelRelationship instance);
  partial void Inserttbl_PPESAnPDESA(tbl_PPESAnPDESA instance);
  partial void Updatetbl_PPESAnPDESA(tbl_PPESAnPDESA instance);
  partial void Deletetbl_PPESAnPDESA(tbl_PPESAnPDESA instance);
  partial void Inserttbl_Process(tbl_Process instance);
  partial void Updatetbl_Process(tbl_Process instance);
  partial void Deletetbl_Process(tbl_Process instance);
  partial void Inserttbl_ProcessObject(tbl_ProcessObject instance);
  partial void Updatetbl_ProcessObject(tbl_ProcessObject instance);
  partial void Deletetbl_ProcessObject(tbl_ProcessObject instance);
  partial void Inserttbl_Product(tbl_Product instance);
  partial void Updatetbl_Product(tbl_Product instance);
  partial void Deletetbl_Product(tbl_Product instance);
  partial void Inserttbl_ProductFamily(tbl_ProductFamily instance);
  partial void Updatetbl_ProductFamily(tbl_ProductFamily instance);
  partial void Deletetbl_ProductFamily(tbl_ProductFamily instance);
  partial void Inserttbl_ProductLine(tbl_ProductLine instance);
  partial void Updatetbl_ProductLine(tbl_ProductLine instance);
  partial void Deletetbl_ProductLine(tbl_ProductLine instance);
  partial void Inserttbl_Registration(tbl_Registration instance);
  partial void Updatetbl_Registration(tbl_Registration instance);
  partial void Deletetbl_Registration(tbl_Registration instance);
  partial void Inserttbl_RepairLog(tbl_RepairLog instance);
  partial void Updatetbl_RepairLog(tbl_RepairLog instance);
  partial void Deletetbl_RepairLog(tbl_RepairLog instance);
  partial void Inserttbl_Report(tbl_Report instance);
  partial void Updatetbl_Report(tbl_Report instance);
  partial void Deletetbl_Report(tbl_Report instance);
  partial void Inserttbl_SubAssembly(tbl_SubAssembly instance);
  partial void Updatetbl_SubAssembly(tbl_SubAssembly instance);
  partial void Deletetbl_SubAssembly(tbl_SubAssembly instance);
  partial void Inserttbl_Summary(tbl_Summary instance);
  partial void Updatetbl_Summary(tbl_Summary instance);
  partial void Deletetbl_Summary(tbl_Summary instance);
  partial void Inserttbl_SummaryAttributeMenu(tbl_SummaryAttributeMenu instance);
  partial void Updatetbl_SummaryAttributeMenu(tbl_SummaryAttributeMenu instance);
  partial void Deletetbl_SummaryAttributeMenu(tbl_SummaryAttributeMenu instance);
  partial void Inserttbl_SummaryData(tbl_SummaryData instance);
  partial void Updatetbl_SummaryData(tbl_SummaryData instance);
  partial void Deletetbl_SummaryData(tbl_SummaryData instance);
  partial void Inserttbl_System(tbl_System instance);
  partial void Updatetbl_System(tbl_System instance);
  partial void Deletetbl_System(tbl_System instance);
  partial void Inserttbl_SystemIO(tbl_SystemIO instance);
  partial void Updatetbl_SystemIO(tbl_SystemIO instance);
  partial void Deletetbl_SystemIO(tbl_SystemIO instance);
  partial void Inserttbl_SystemProcessIO(tbl_SystemProcessIO instance);
  partial void Updatetbl_SystemProcessIO(tbl_SystemProcessIO instance);
  partial void Deletetbl_SystemProcessIO(tbl_SystemProcessIO instance);
  partial void Inserttbl_Target(tbl_Target instance);
  partial void Updatetbl_Target(tbl_Target instance);
  partial void Deletetbl_Target(tbl_Target instance);
  partial void Inserttbl_TargetObject(tbl_TargetObject instance);
  partial void Updatetbl_TargetObject(tbl_TargetObject instance);
  partial void Deletetbl_TargetObject(tbl_TargetObject instance);
  partial void Inserttbl_TargetParallelRelationship(tbl_TargetParallelRelationship instance);
  partial void Updatetbl_TargetParallelRelationship(tbl_TargetParallelRelationship instance);
  partial void Deletetbl_TargetParallelRelationship(tbl_TargetParallelRelationship instance);
  partial void Inserttbl_TFG(tbl_TFG instance);
  partial void Updatetbl_TFG(tbl_TFG instance);
  partial void Deletetbl_TFG(tbl_TFG instance);
  partial void Inserttbl_TFGVendor(tbl_TFGVendor instance);
  partial void Updatetbl_TFGVendor(tbl_TFGVendor instance);
  partial void Deletetbl_TFGVendor(tbl_TFGVendor instance);
  partial void Inserttbl_Unit(tbl_Unit instance);
  partial void Updatetbl_Unit(tbl_Unit instance);
  partial void Deletetbl_Unit(tbl_Unit instance);
  partial void InsertErrorInfo(ErrorInfo instance);
  partial void UpdateErrorInfo(ErrorInfo instance);
  partial void DeleteErrorInfo(ErrorInfo instance);
  #endregion
	
	public VisualERPDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NewVisualERPConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VisualERPDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VisualERPDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VisualERPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VisualERPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tbl_Assembly> tbl_Assemblies
	{
		get
		{
			return this.GetTable<tbl_Assembly>();
		}
	}
	
	public System.Data.Linq.Table<tbl_AttributesMenu> tbl_AttributesMenus
	{
		get
		{
			return this.GetTable<tbl_AttributesMenu>();
		}
	}
	
	public System.Data.Linq.Table<tbl_BOM> tbl_BOMs
	{
		get
		{
			return this.GetTable<tbl_BOM>();
		}
	}
	
	public System.Data.Linq.Table<tbl_BomProcess> tbl_BomProcesses
	{
		get
		{
			return this.GetTable<tbl_BomProcess>();
		}
	}
	
	public System.Data.Linq.Table<tbl_BomTypeCollection> tbl_BomTypeCollections
	{
		get
		{
			return this.GetTable<tbl_BomTypeCollection>();
		}
	}
	
	public System.Data.Linq.Table<tbl_BusinessSegment> tbl_BusinessSegments
	{
		get
		{
			return this.GetTable<tbl_BusinessSegment>();
		}
	}
	
	public System.Data.Linq.Table<tbl_BusinessUnit> tbl_BusinessUnits
	{
		get
		{
			return this.GetTable<tbl_BusinessUnit>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Bussiness> tbl_Bussinesses
	{
		get
		{
			return this.GetTable<tbl_Bussiness>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Calibration> tbl_Calibrations
	{
		get
		{
			return this.GetTable<tbl_Calibration>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Customer> tbl_Customers
	{
		get
		{
			return this.GetTable<tbl_Customer>();
		}
	}
	
	public System.Data.Linq.Table<tbl_DefalutAttributeMenu> tbl_DefalutAttributeMenus
	{
		get
		{
			return this.GetTable<tbl_DefalutAttributeMenu>();
		}
	}
	
	public System.Data.Linq.Table<tbl_DocumentLinkType> tbl_DocumentLinkTypes
	{
		get
		{
			return this.GetTable<tbl_DocumentLinkType>();
		}
	}
	
	public System.Data.Linq.Table<tbl_HandOffData> tbl_HandOffDatas
	{
		get
		{
			return this.GetTable<tbl_HandOffData>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Industry> tbl_Industries
	{
		get
		{
			return this.GetTable<tbl_Industry>();
		}
	}
	
	public System.Data.Linq.Table<tbl_InformationInput> tbl_InformationInputs
	{
		get
		{
			return this.GetTable<tbl_InformationInput>();
		}
	}
	
	public System.Data.Linq.Table<tbl_InputType> tbl_InputTypes
	{
		get
		{
			return this.GetTable<tbl_InputType>();
		}
	}
	
	public System.Data.Linq.Table<tbl_InvantoryTriangle> tbl_InvantoryTriangles
	{
		get
		{
			return this.GetTable<tbl_InvantoryTriangle>();
		}
	}
	
	public System.Data.Linq.Table<tbl_MachineList> tbl_MachineLists
	{
		get
		{
			return this.GetTable<tbl_MachineList>();
		}
	}
	
	public System.Data.Linq.Table<tbl_ParallelRelationship> tbl_ParallelRelationships
	{
		get
		{
			return this.GetTable<tbl_ParallelRelationship>();
		}
	}
	
	public System.Data.Linq.Table<tbl_PPESAnPDESA> tbl_PPESAnPDESAs
	{
		get
		{
			return this.GetTable<tbl_PPESAnPDESA>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Process> tbl_Processes
	{
		get
		{
			return this.GetTable<tbl_Process>();
		}
	}
	
	public System.Data.Linq.Table<tbl_ProcessObject> tbl_ProcessObjects
	{
		get
		{
			return this.GetTable<tbl_ProcessObject>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Product> tbl_Products
	{
		get
		{
			return this.GetTable<tbl_Product>();
		}
	}
	
	public System.Data.Linq.Table<tbl_ProductFamily> tbl_ProductFamilies
	{
		get
		{
			return this.GetTable<tbl_ProductFamily>();
		}
	}
	
	public System.Data.Linq.Table<tbl_ProductLine> tbl_ProductLines
	{
		get
		{
			return this.GetTable<tbl_ProductLine>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Registration> tbl_Registrations
	{
		get
		{
			return this.GetTable<tbl_Registration>();
		}
	}
	
	public System.Data.Linq.Table<tbl_RepairLog> tbl_RepairLogs
	{
		get
		{
			return this.GetTable<tbl_RepairLog>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Report> tbl_Reports
	{
		get
		{
			return this.GetTable<tbl_Report>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Role> tbl_Roles
	{
		get
		{
			return this.GetTable<tbl_Role>();
		}
	}
	
	public System.Data.Linq.Table<tbl_SubAssembly> tbl_SubAssemblies
	{
		get
		{
			return this.GetTable<tbl_SubAssembly>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Summary> tbl_Summaries
	{
		get
		{
			return this.GetTable<tbl_Summary>();
		}
	}
	
	public System.Data.Linq.Table<tbl_SummaryAttributeMenu> tbl_SummaryAttributeMenus
	{
		get
		{
			return this.GetTable<tbl_SummaryAttributeMenu>();
		}
	}
	
	public System.Data.Linq.Table<tbl_SummaryData> tbl_SummaryDatas
	{
		get
		{
			return this.GetTable<tbl_SummaryData>();
		}
	}
	
	public System.Data.Linq.Table<tbl_System> tbl_Systems
	{
		get
		{
			return this.GetTable<tbl_System>();
		}
	}
	
	public System.Data.Linq.Table<tbl_SystemIO> tbl_SystemIOs
	{
		get
		{
			return this.GetTable<tbl_SystemIO>();
		}
	}
	
	public System.Data.Linq.Table<tbl_SystemProcessIO> tbl_SystemProcessIOs
	{
		get
		{
			return this.GetTable<tbl_SystemProcessIO>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Target> tbl_Targets
	{
		get
		{
			return this.GetTable<tbl_Target>();
		}
	}
	
	public System.Data.Linq.Table<tbl_TargetObject> tbl_TargetObjects
	{
		get
		{
			return this.GetTable<tbl_TargetObject>();
		}
	}
	
	public System.Data.Linq.Table<tbl_TargetParallelRelationship> tbl_TargetParallelRelationships
	{
		get
		{
			return this.GetTable<tbl_TargetParallelRelationship>();
		}
	}
	
	public System.Data.Linq.Table<tbl_TFG> tbl_TFGs
	{
		get
		{
			return this.GetTable<tbl_TFG>();
		}
	}
	
	public System.Data.Linq.Table<tbl_TFGVendor> tbl_TFGVendors
	{
		get
		{
			return this.GetTable<tbl_TFGVendor>();
		}
	}
	
	public System.Data.Linq.Table<tbl_TypeCollection> tbl_TypeCollections
	{
		get
		{
			return this.GetTable<tbl_TypeCollection>();
		}
	}
	
	public System.Data.Linq.Table<tbl_Unit> tbl_Units
	{
		get
		{
			return this.GetTable<tbl_Unit>();
		}
	}
	
	public System.Data.Linq.Table<ErrorInfo> ErrorInfos
	{
		get
		{
			return this.GetTable<ErrorInfo>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAttributeDataByID")]
	public int DeleteAttributeDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributemenuId", DbType="Int")] System.Nullable<int> attributemenuId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attributemenuId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAttributeDataByProcessObjID")]
	public int DeleteAttributeDataByProcessObjID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessObjId", DbType="Int")] System.Nullable<int> processObjId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processObjId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteHandOffDataByID")]
	public int DeleteHandOffDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HOID", DbType="Int")] System.Nullable<int> hOID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), hOID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteInputDataByID")]
	public int DeleteInputDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkID", DbType="Int")] System.Nullable<int> linkID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), linkID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteInventeryProcessObjByID")]
	public int DeleteInventeryProcessObjByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessObjID", DbType="Int")] System.Nullable<int> processObjID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processObjID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMachineDataByID")]
	public int DeleteMachineDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MachineID", DbType="Int")] System.Nullable<int> machineID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), machineID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMachineRepairDataByID")]
	public int DeleteMachineRepairDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MachineRepairID", DbType="Int")] System.Nullable<int> machineRepairID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), machineRepairID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMachineRepairDataByMachineID")]
	public int DeleteMachineRepairDataByMachineID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MachineID", DbType="Int")] System.Nullable<int> machineID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), machineID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteParallelProcessObjDataByID")]
	public int DeleteParallelProcessObjDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessObjID", DbType="Int")] System.Nullable<int> processObjID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processObjID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeletePPESADataByID")]
	public int DeletePPESADataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FormID", DbType="Int")] System.Nullable<int> formID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), formID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteProcessObjDataByID")]
	public int DeleteProcessObjDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessObjID", DbType="Int")] System.Nullable<int> processObjID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processObjID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteReportByID")]
	public int DeleteReportByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReportID", DbType="Int")] System.Nullable<int> reportID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), reportID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSummaryDataByAttributeName")]
	public int DeleteSummaryDataByAttributeName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(1)")] string attributeName)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attributeName);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSummaryDataByProcessID")]
	public int DeleteSummaryDataByProcessID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> processId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSystemIODataByPOID")]
	public int DeleteSystemIODataByPOID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessObjectID", DbType="Int")] System.Nullable<int> processObjectID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processObjectID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTargetObjDataByID")]
	public int DeleteTargetObjDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetObjID", DbType="Int")] System.Nullable<int> targetObjID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetObjID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTFGDataByID")]
	public int DeleteTFGDataByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TFGID", DbType="Int")] System.Nullable<int> tFGID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tFGID);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_BulkInsertAttribute")]
	public int SP_BulkInsertAttribute([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessObjectID", DbType="Int")] System.Nullable<int> processObjectID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProcessID", DbType="Int")] System.Nullable<int> processID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceType", DbType="Int")] System.Nullable<int> sourceType)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), processObjectID, processID, sourceType);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CopyInsertBomProcess")]
	public int SP_CopyInsertBomProcess([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SeletedBomProcessId", DbType="Int")] System.Nullable<int> seletedBomProcessId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentBomProcessId", DbType="Int")] System.Nullable<int> currentBomProcessId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), seletedBomProcessId, currentBomProcessId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.udf_PutSpacesBetweenChars", IsComposable=true)]
	public string udf_PutSpacesBetweenChars([global::System.Data.Linq.Mapping.ParameterAttribute(Name="String", DbType="VarChar(100)")] string @string)
	{
		return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), @string).ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Assembly")]
public partial class tbl_Assembly : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AssemblyID;
	
	private System.Nullable<int> _ProductID;
	
	private string _AssemblyName;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.DateTime _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssemblyIDChanging(int value);
    partial void OnAssemblyIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_Assembly()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AssemblyID
	{
		get
		{
			return this._AssemblyID;
		}
		set
		{
			if ((this._AssemblyID != value))
			{
				this.OnAssemblyIDChanging(value);
				this.SendPropertyChanging();
				this._AssemblyID = value;
				this.SendPropertyChanged("AssemblyID");
				this.OnAssemblyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
	public System.Nullable<int> ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="NVarChar(100)")]
	public string AssemblyName
	{
		get
		{
			return this._AssemblyName;
		}
		set
		{
			if ((this._AssemblyName != value))
			{
				this.OnAssemblyNameChanging(value);
				this.SendPropertyChanging();
				this._AssemblyName = value;
				this.SendPropertyChanged("AssemblyName");
				this.OnAssemblyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_AttributesMenu")]
public partial class tbl_AttributesMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AttributeMenuID;
	
	private string _AttributeName;
	
	private string _AttributeValue;
	
	private System.Nullable<int> _UnitID;
	
	private System.Nullable<bool> _IncludeOnMap;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _ProcessObjectID;
	
	private System.Nullable<int> _ProcessID;
	
	private System.Nullable<int> _SourceType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeMenuIDChanging(int value);
    partial void OnAttributeMenuIDChanged();
    partial void OnAttributeNameChanging(string value);
    partial void OnAttributeNameChanged();
    partial void OnAttributeValueChanging(string value);
    partial void OnAttributeValueChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnIncludeOnMapChanging(System.Nullable<bool> value);
    partial void OnIncludeOnMapChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnProcessObjectIDChanging(System.Nullable<int> value);
    partial void OnProcessObjectIDChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnSourceTypeChanging(System.Nullable<int> value);
    partial void OnSourceTypeChanged();
    #endregion
	
	public tbl_AttributesMenu()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeMenuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AttributeMenuID
	{
		get
		{
			return this._AttributeMenuID;
		}
		set
		{
			if ((this._AttributeMenuID != value))
			{
				this.OnAttributeMenuIDChanging(value);
				this.SendPropertyChanging();
				this._AttributeMenuID = value;
				this.SendPropertyChanged("AttributeMenuID");
				this.OnAttributeMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(100)")]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this.OnAttributeNameChanging(value);
				this.SendPropertyChanging();
				this._AttributeName = value;
				this.SendPropertyChanged("AttributeName");
				this.OnAttributeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValue", DbType="NVarChar(500)")]
	public string AttributeValue
	{
		get
		{
			return this._AttributeValue;
		}
		set
		{
			if ((this._AttributeValue != value))
			{
				this.OnAttributeValueChanging(value);
				this.SendPropertyChanging();
				this._AttributeValue = value;
				this.SendPropertyChanged("AttributeValue");
				this.OnAttributeValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
	public System.Nullable<int> UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeOnMap", DbType="Bit")]
	public System.Nullable<bool> IncludeOnMap
	{
		get
		{
			return this._IncludeOnMap;
		}
		set
		{
			if ((this._IncludeOnMap != value))
			{
				this.OnIncludeOnMapChanging(value);
				this.SendPropertyChanging();
				this._IncludeOnMap = value;
				this.SendPropertyChanged("IncludeOnMap");
				this.OnIncludeOnMapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjectID", DbType="Int")]
	public System.Nullable<int> ProcessObjectID
	{
		get
		{
			return this._ProcessObjectID;
		}
		set
		{
			if ((this._ProcessObjectID != value))
			{
				this.OnProcessObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjectID = value;
				this.SendPropertyChanged("ProcessObjectID");
				this.OnProcessObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="Int")]
	public System.Nullable<int> SourceType
	{
		get
		{
			return this._SourceType;
		}
		set
		{
			if ((this._SourceType != value))
			{
				this.OnSourceTypeChanging(value);
				this.SendPropertyChanging();
				this._SourceType = value;
				this.SendPropertyChanged("SourceType");
				this.OnSourceTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BOM")]
public partial class tbl_BOM : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BOMID;
	
	private System.Nullable<int> _BomProcessID;
	
	private string _Description;
	
	private string _BOMLevel;
	
	private string _BOMRevision;
	
	private System.Nullable<double> _weight;
	
	private string _UOM;
	
	private System.Nullable<double> _StandardCost;
	
	private System.Nullable<double> _WorkingCost;
	
	private System.Nullable<double> _StdPackQty;
	
	private System.Nullable<double> _MaxPackLength;
	
	private System.Nullable<double> _MaxPackWidth;
	
	private double _MaxPackHeight;
	
	private System.Nullable<double> _ContainerQty;
	
	private string _MedianRelinishmentLT;
	
	private string _MinRLT;
	
	private string _MaxRLT;
	
	private string _Rolling12MnthUsage;
	
	private string _AvgMonthUsage;
	
	private string _RiskFactor;
	
	private string _MonthStdDevRiskFactor;
	
	private string _KanbanQty;
	
	private System.Nullable<bool> _InService;
	
	private System.Nullable<System.DateTime> _In_ServiceDate;
	
	private System.Nullable<System.DateTime> _ObsolescenceDate;
	
	private string _OnHandInventory;
	
	private string _OnOrder;
	
	private string _NextShipmentDue;
	
	private string _NextQtyDue;
	
	private string _PartReqNxtPerd;
	
	private System.Nullable<int> _CurrentPurchasingOwner;
	
	private System.Nullable<int> _CurrentDesignOwner;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBOMIDChanging(int value);
    partial void OnBOMIDChanged();
    partial void OnBomProcessIDChanging(System.Nullable<int> value);
    partial void OnBomProcessIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBOMLevelChanging(string value);
    partial void OnBOMLevelChanged();
    partial void OnBOMRevisionChanging(string value);
    partial void OnBOMRevisionChanged();
    partial void OnweightChanging(System.Nullable<double> value);
    partial void OnweightChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnStandardCostChanging(System.Nullable<double> value);
    partial void OnStandardCostChanged();
    partial void OnWorkingCostChanging(System.Nullable<double> value);
    partial void OnWorkingCostChanged();
    partial void OnStdPackQtyChanging(System.Nullable<double> value);
    partial void OnStdPackQtyChanged();
    partial void OnMaxPackLengthChanging(System.Nullable<double> value);
    partial void OnMaxPackLengthChanged();
    partial void OnMaxPackWidthChanging(System.Nullable<double> value);
    partial void OnMaxPackWidthChanged();
    partial void OnMaxPackHeightChanging(double value);
    partial void OnMaxPackHeightChanged();
    partial void OnContainerQtyChanging(System.Nullable<double> value);
    partial void OnContainerQtyChanged();
    partial void OnMedianRelinishmentLTChanging(string value);
    partial void OnMedianRelinishmentLTChanged();
    partial void OnMinRLTChanging(string value);
    partial void OnMinRLTChanged();
    partial void OnMaxRLTChanging(string value);
    partial void OnMaxRLTChanged();
    partial void OnRolling12MnthUsageChanging(string value);
    partial void OnRolling12MnthUsageChanged();
    partial void OnAvgMonthUsageChanging(string value);
    partial void OnAvgMonthUsageChanged();
    partial void OnRiskFactorChanging(string value);
    partial void OnRiskFactorChanged();
    partial void OnMonthStdDevRiskFactorChanging(string value);
    partial void OnMonthStdDevRiskFactorChanged();
    partial void OnKanbanQtyChanging(string value);
    partial void OnKanbanQtyChanged();
    partial void OnInServiceChanging(System.Nullable<bool> value);
    partial void OnInServiceChanged();
    partial void OnIn_ServiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIn_ServiceDateChanged();
    partial void OnObsolescenceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnObsolescenceDateChanged();
    partial void OnOnHandInventoryChanging(string value);
    partial void OnOnHandInventoryChanged();
    partial void OnOnOrderChanging(string value);
    partial void OnOnOrderChanged();
    partial void OnNextShipmentDueChanging(string value);
    partial void OnNextShipmentDueChanged();
    partial void OnNextQtyDueChanging(string value);
    partial void OnNextQtyDueChanged();
    partial void OnPartReqNxtPerdChanging(string value);
    partial void OnPartReqNxtPerdChanged();
    partial void OnCurrentPurchasingOwnerChanging(System.Nullable<int> value);
    partial void OnCurrentPurchasingOwnerChanged();
    partial void OnCurrentDesignOwnerChanging(System.Nullable<int> value);
    partial void OnCurrentDesignOwnerChanged();
    #endregion
	
	public tbl_BOM()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BOMID
	{
		get
		{
			return this._BOMID;
		}
		set
		{
			if ((this._BOMID != value))
			{
				this.OnBOMIDChanging(value);
				this.SendPropertyChanging();
				this._BOMID = value;
				this.SendPropertyChanged("BOMID");
				this.OnBOMIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomProcessID", DbType="Int")]
	public System.Nullable<int> BomProcessID
	{
		get
		{
			return this._BomProcessID;
		}
		set
		{
			if ((this._BomProcessID != value))
			{
				this.OnBomProcessIDChanging(value);
				this.SendPropertyChanging();
				this._BomProcessID = value;
				this.SendPropertyChanged("BomProcessID");
				this.OnBomProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMLevel", DbType="NVarChar(50)")]
	public string BOMLevel
	{
		get
		{
			return this._BOMLevel;
		}
		set
		{
			if ((this._BOMLevel != value))
			{
				this.OnBOMLevelChanging(value);
				this.SendPropertyChanging();
				this._BOMLevel = value;
				this.SendPropertyChanged("BOMLevel");
				this.OnBOMLevelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMRevision", DbType="NVarChar(50)")]
	public string BOMRevision
	{
		get
		{
			return this._BOMRevision;
		}
		set
		{
			if ((this._BOMRevision != value))
			{
				this.OnBOMRevisionChanging(value);
				this.SendPropertyChanging();
				this._BOMRevision = value;
				this.SendPropertyChanged("BOMRevision");
				this.OnBOMRevisionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Float")]
	public System.Nullable<double> weight
	{
		get
		{
			return this._weight;
		}
		set
		{
			if ((this._weight != value))
			{
				this.OnweightChanging(value);
				this.SendPropertyChanging();
				this._weight = value;
				this.SendPropertyChanged("weight");
				this.OnweightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NVarChar(50)")]
	public string UOM
	{
		get
		{
			return this._UOM;
		}
		set
		{
			if ((this._UOM != value))
			{
				this.OnUOMChanging(value);
				this.SendPropertyChanging();
				this._UOM = value;
				this.SendPropertyChanged("UOM");
				this.OnUOMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCost", DbType="Float")]
	public System.Nullable<double> StandardCost
	{
		get
		{
			return this._StandardCost;
		}
		set
		{
			if ((this._StandardCost != value))
			{
				this.OnStandardCostChanging(value);
				this.SendPropertyChanging();
				this._StandardCost = value;
				this.SendPropertyChanged("StandardCost");
				this.OnStandardCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingCost", DbType="Float")]
	public System.Nullable<double> WorkingCost
	{
		get
		{
			return this._WorkingCost;
		}
		set
		{
			if ((this._WorkingCost != value))
			{
				this.OnWorkingCostChanging(value);
				this.SendPropertyChanging();
				this._WorkingCost = value;
				this.SendPropertyChanged("WorkingCost");
				this.OnWorkingCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdPackQty", DbType="Float")]
	public System.Nullable<double> StdPackQty
	{
		get
		{
			return this._StdPackQty;
		}
		set
		{
			if ((this._StdPackQty != value))
			{
				this.OnStdPackQtyChanging(value);
				this.SendPropertyChanging();
				this._StdPackQty = value;
				this.SendPropertyChanged("StdPackQty");
				this.OnStdPackQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPackLength", DbType="Float")]
	public System.Nullable<double> MaxPackLength
	{
		get
		{
			return this._MaxPackLength;
		}
		set
		{
			if ((this._MaxPackLength != value))
			{
				this.OnMaxPackLengthChanging(value);
				this.SendPropertyChanging();
				this._MaxPackLength = value;
				this.SendPropertyChanged("MaxPackLength");
				this.OnMaxPackLengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPackWidth", DbType="Float")]
	public System.Nullable<double> MaxPackWidth
	{
		get
		{
			return this._MaxPackWidth;
		}
		set
		{
			if ((this._MaxPackWidth != value))
			{
				this.OnMaxPackWidthChanging(value);
				this.SendPropertyChanging();
				this._MaxPackWidth = value;
				this.SendPropertyChanged("MaxPackWidth");
				this.OnMaxPackWidthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPackHeight", DbType="Float NOT NULL")]
	public double MaxPackHeight
	{
		get
		{
			return this._MaxPackHeight;
		}
		set
		{
			if ((this._MaxPackHeight != value))
			{
				this.OnMaxPackHeightChanging(value);
				this.SendPropertyChanging();
				this._MaxPackHeight = value;
				this.SendPropertyChanged("MaxPackHeight");
				this.OnMaxPackHeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerQty", DbType="Float")]
	public System.Nullable<double> ContainerQty
	{
		get
		{
			return this._ContainerQty;
		}
		set
		{
			if ((this._ContainerQty != value))
			{
				this.OnContainerQtyChanging(value);
				this.SendPropertyChanging();
				this._ContainerQty = value;
				this.SendPropertyChanged("ContainerQty");
				this.OnContainerQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedianRelinishmentLT", DbType="NVarChar(50)")]
	public string MedianRelinishmentLT
	{
		get
		{
			return this._MedianRelinishmentLT;
		}
		set
		{
			if ((this._MedianRelinishmentLT != value))
			{
				this.OnMedianRelinishmentLTChanging(value);
				this.SendPropertyChanging();
				this._MedianRelinishmentLT = value;
				this.SendPropertyChanged("MedianRelinishmentLT");
				this.OnMedianRelinishmentLTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRLT", DbType="NVarChar(50)")]
	public string MinRLT
	{
		get
		{
			return this._MinRLT;
		}
		set
		{
			if ((this._MinRLT != value))
			{
				this.OnMinRLTChanging(value);
				this.SendPropertyChanging();
				this._MinRLT = value;
				this.SendPropertyChanged("MinRLT");
				this.OnMinRLTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRLT", DbType="NVarChar(50)")]
	public string MaxRLT
	{
		get
		{
			return this._MaxRLT;
		}
		set
		{
			if ((this._MaxRLT != value))
			{
				this.OnMaxRLTChanging(value);
				this.SendPropertyChanging();
				this._MaxRLT = value;
				this.SendPropertyChanged("MaxRLT");
				this.OnMaxRLTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rolling12MnthUsage", DbType="NVarChar(50)")]
	public string Rolling12MnthUsage
	{
		get
		{
			return this._Rolling12MnthUsage;
		}
		set
		{
			if ((this._Rolling12MnthUsage != value))
			{
				this.OnRolling12MnthUsageChanging(value);
				this.SendPropertyChanging();
				this._Rolling12MnthUsage = value;
				this.SendPropertyChanged("Rolling12MnthUsage");
				this.OnRolling12MnthUsageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgMonthUsage", DbType="NVarChar(50)")]
	public string AvgMonthUsage
	{
		get
		{
			return this._AvgMonthUsage;
		}
		set
		{
			if ((this._AvgMonthUsage != value))
			{
				this.OnAvgMonthUsageChanging(value);
				this.SendPropertyChanging();
				this._AvgMonthUsage = value;
				this.SendPropertyChanged("AvgMonthUsage");
				this.OnAvgMonthUsageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskFactor", DbType="NVarChar(100)")]
	public string RiskFactor
	{
		get
		{
			return this._RiskFactor;
		}
		set
		{
			if ((this._RiskFactor != value))
			{
				this.OnRiskFactorChanging(value);
				this.SendPropertyChanging();
				this._RiskFactor = value;
				this.SendPropertyChanged("RiskFactor");
				this.OnRiskFactorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthStdDevRiskFactor", DbType="NVarChar(50)")]
	public string MonthStdDevRiskFactor
	{
		get
		{
			return this._MonthStdDevRiskFactor;
		}
		set
		{
			if ((this._MonthStdDevRiskFactor != value))
			{
				this.OnMonthStdDevRiskFactorChanging(value);
				this.SendPropertyChanging();
				this._MonthStdDevRiskFactor = value;
				this.SendPropertyChanged("MonthStdDevRiskFactor");
				this.OnMonthStdDevRiskFactorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KanbanQty", DbType="NVarChar(50)")]
	public string KanbanQty
	{
		get
		{
			return this._KanbanQty;
		}
		set
		{
			if ((this._KanbanQty != value))
			{
				this.OnKanbanQtyChanging(value);
				this.SendPropertyChanging();
				this._KanbanQty = value;
				this.SendPropertyChanged("KanbanQty");
				this.OnKanbanQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InService", DbType="Bit")]
	public System.Nullable<bool> InService
	{
		get
		{
			return this._InService;
		}
		set
		{
			if ((this._InService != value))
			{
				this.OnInServiceChanging(value);
				this.SendPropertyChanging();
				this._InService = value;
				this.SendPropertyChanged("InService");
				this.OnInServiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_In_ServiceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> In_ServiceDate
	{
		get
		{
			return this._In_ServiceDate;
		}
		set
		{
			if ((this._In_ServiceDate != value))
			{
				this.OnIn_ServiceDateChanging(value);
				this.SendPropertyChanging();
				this._In_ServiceDate = value;
				this.SendPropertyChanged("In_ServiceDate");
				this.OnIn_ServiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObsolescenceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ObsolescenceDate
	{
		get
		{
			return this._ObsolescenceDate;
		}
		set
		{
			if ((this._ObsolescenceDate != value))
			{
				this.OnObsolescenceDateChanging(value);
				this.SendPropertyChanging();
				this._ObsolescenceDate = value;
				this.SendPropertyChanged("ObsolescenceDate");
				this.OnObsolescenceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnHandInventory", DbType="NVarChar(50)")]
	public string OnHandInventory
	{
		get
		{
			return this._OnHandInventory;
		}
		set
		{
			if ((this._OnHandInventory != value))
			{
				this.OnOnHandInventoryChanging(value);
				this.SendPropertyChanging();
				this._OnHandInventory = value;
				this.SendPropertyChanged("OnHandInventory");
				this.OnOnHandInventoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnOrder", DbType="NVarChar(50)")]
	public string OnOrder
	{
		get
		{
			return this._OnOrder;
		}
		set
		{
			if ((this._OnOrder != value))
			{
				this.OnOnOrderChanging(value);
				this.SendPropertyChanging();
				this._OnOrder = value;
				this.SendPropertyChanged("OnOrder");
				this.OnOnOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextShipmentDue", DbType="NVarChar(50)")]
	public string NextShipmentDue
	{
		get
		{
			return this._NextShipmentDue;
		}
		set
		{
			if ((this._NextShipmentDue != value))
			{
				this.OnNextShipmentDueChanging(value);
				this.SendPropertyChanging();
				this._NextShipmentDue = value;
				this.SendPropertyChanged("NextShipmentDue");
				this.OnNextShipmentDueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextQtyDue", DbType="NVarChar(50)")]
	public string NextQtyDue
	{
		get
		{
			return this._NextQtyDue;
		}
		set
		{
			if ((this._NextQtyDue != value))
			{
				this.OnNextQtyDueChanging(value);
				this.SendPropertyChanging();
				this._NextQtyDue = value;
				this.SendPropertyChanged("NextQtyDue");
				this.OnNextQtyDueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartReqNxtPerd", DbType="NVarChar(50)")]
	public string PartReqNxtPerd
	{
		get
		{
			return this._PartReqNxtPerd;
		}
		set
		{
			if ((this._PartReqNxtPerd != value))
			{
				this.OnPartReqNxtPerdChanging(value);
				this.SendPropertyChanging();
				this._PartReqNxtPerd = value;
				this.SendPropertyChanged("PartReqNxtPerd");
				this.OnPartReqNxtPerdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPurchasingOwner", DbType="Int")]
	public System.Nullable<int> CurrentPurchasingOwner
	{
		get
		{
			return this._CurrentPurchasingOwner;
		}
		set
		{
			if ((this._CurrentPurchasingOwner != value))
			{
				this.OnCurrentPurchasingOwnerChanging(value);
				this.SendPropertyChanging();
				this._CurrentPurchasingOwner = value;
				this.SendPropertyChanged("CurrentPurchasingOwner");
				this.OnCurrentPurchasingOwnerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentDesignOwner", DbType="Int")]
	public System.Nullable<int> CurrentDesignOwner
	{
		get
		{
			return this._CurrentDesignOwner;
		}
		set
		{
			if ((this._CurrentDesignOwner != value))
			{
				this.OnCurrentDesignOwnerChanging(value);
				this.SendPropertyChanging();
				this._CurrentDesignOwner = value;
				this.SendPropertyChanged("CurrentDesignOwner");
				this.OnCurrentDesignOwnerChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BomProcess")]
public partial class tbl_BomProcess : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BomProcessID;
	
	private string _BomProcessName;
	
	private System.Nullable<int> _BomParentID;
	
	private System.Nullable<int> _ProcessID;
	
	private System.Nullable<int> _ProcessObjID;
	
	private System.Nullable<int> _BomTypeID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBomProcessIDChanging(int value);
    partial void OnBomProcessIDChanged();
    partial void OnBomProcessNameChanging(string value);
    partial void OnBomProcessNameChanged();
    partial void OnBomParentIDChanging(System.Nullable<int> value);
    partial void OnBomParentIDChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnProcessObjIDChanging(System.Nullable<int> value);
    partial void OnProcessObjIDChanged();
    partial void OnBomTypeIDChanging(System.Nullable<int> value);
    partial void OnBomTypeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_BomProcess()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomProcessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BomProcessID
	{
		get
		{
			return this._BomProcessID;
		}
		set
		{
			if ((this._BomProcessID != value))
			{
				this.OnBomProcessIDChanging(value);
				this.SendPropertyChanging();
				this._BomProcessID = value;
				this.SendPropertyChanged("BomProcessID");
				this.OnBomProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomProcessName", DbType="NVarChar(100)")]
	public string BomProcessName
	{
		get
		{
			return this._BomProcessName;
		}
		set
		{
			if ((this._BomProcessName != value))
			{
				this.OnBomProcessNameChanging(value);
				this.SendPropertyChanging();
				this._BomProcessName = value;
				this.SendPropertyChanged("BomProcessName");
				this.OnBomProcessNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomParentID", DbType="Int")]
	public System.Nullable<int> BomParentID
	{
		get
		{
			return this._BomParentID;
		}
		set
		{
			if ((this._BomParentID != value))
			{
				this.OnBomParentIDChanging(value);
				this.SendPropertyChanging();
				this._BomParentID = value;
				this.SendPropertyChanged("BomParentID");
				this.OnBomParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjID", DbType="Int")]
	public System.Nullable<int> ProcessObjID
	{
		get
		{
			return this._ProcessObjID;
		}
		set
		{
			if ((this._ProcessObjID != value))
			{
				this.OnProcessObjIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjID = value;
				this.SendPropertyChanged("ProcessObjID");
				this.OnProcessObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomTypeID", DbType="Int")]
	public System.Nullable<int> BomTypeID
	{
		get
		{
			return this._BomTypeID;
		}
		set
		{
			if ((this._BomTypeID != value))
			{
				this.OnBomTypeIDChanging(value);
				this.SendPropertyChanging();
				this._BomTypeID = value;
				this.SendPropertyChanged("BomTypeID");
				this.OnBomTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BomTypeCollection")]
public partial class tbl_BomTypeCollection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BomTypeID;
	
	private string _BomTypeName;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBomTypeIDChanging(int value);
    partial void OnBomTypeIDChanged();
    partial void OnBomTypeNameChanging(string value);
    partial void OnBomTypeNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public tbl_BomTypeCollection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BomTypeID
	{
		get
		{
			return this._BomTypeID;
		}
		set
		{
			if ((this._BomTypeID != value))
			{
				this.OnBomTypeIDChanging(value);
				this.SendPropertyChanging();
				this._BomTypeID = value;
				this.SendPropertyChanged("BomTypeID");
				this.OnBomTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BomTypeName", DbType="NVarChar(100)")]
	public string BomTypeName
	{
		get
		{
			return this._BomTypeName;
		}
		set
		{
			if ((this._BomTypeName != value))
			{
				this.OnBomTypeNameChanging(value);
				this.SendPropertyChanging();
				this._BomTypeName = value;
				this.SendPropertyChanged("BomTypeName");
				this.OnBomTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BusinessSegment")]
public partial class tbl_BusinessSegment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BusinessSegmentID;
	
	private string _BusinessSegmentName;
	
	private System.Nullable<int> _BusinessUnitID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessSegmentIDChanging(int value);
    partial void OnBusinessSegmentIDChanged();
    partial void OnBusinessSegmentNameChanging(string value);
    partial void OnBusinessSegmentNameChanged();
    partial void OnBusinessUnitIDChanging(System.Nullable<int> value);
    partial void OnBusinessUnitIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_BusinessSegment()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessSegmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BusinessSegmentID
	{
		get
		{
			return this._BusinessSegmentID;
		}
		set
		{
			if ((this._BusinessSegmentID != value))
			{
				this.OnBusinessSegmentIDChanging(value);
				this.SendPropertyChanging();
				this._BusinessSegmentID = value;
				this.SendPropertyChanged("BusinessSegmentID");
				this.OnBusinessSegmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessSegmentName", DbType="NVarChar(100)")]
	public string BusinessSegmentName
	{
		get
		{
			return this._BusinessSegmentName;
		}
		set
		{
			if ((this._BusinessSegmentName != value))
			{
				this.OnBusinessSegmentNameChanging(value);
				this.SendPropertyChanging();
				this._BusinessSegmentName = value;
				this.SendPropertyChanged("BusinessSegmentName");
				this.OnBusinessSegmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnitID", DbType="Int")]
	public System.Nullable<int> BusinessUnitID
	{
		get
		{
			return this._BusinessUnitID;
		}
		set
		{
			if ((this._BusinessUnitID != value))
			{
				this.OnBusinessUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BusinessUnitID = value;
				this.SendPropertyChanged("BusinessUnitID");
				this.OnBusinessUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_BusinessUnit")]
public partial class tbl_BusinessUnit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BusinessUnitID;
	
	private string _BusinessUnitName;
	
	private System.Nullable<int> _BusinessID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessUnitIDChanging(int value);
    partial void OnBusinessUnitIDChanged();
    partial void OnBusinessUnitNameChanging(string value);
    partial void OnBusinessUnitNameChanged();
    partial void OnBusinessIDChanging(System.Nullable<int> value);
    partial void OnBusinessIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_BusinessUnit()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BusinessUnitID
	{
		get
		{
			return this._BusinessUnitID;
		}
		set
		{
			if ((this._BusinessUnitID != value))
			{
				this.OnBusinessUnitIDChanging(value);
				this.SendPropertyChanging();
				this._BusinessUnitID = value;
				this.SendPropertyChanged("BusinessUnitID");
				this.OnBusinessUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessUnitName", DbType="NVarChar(100)")]
	public string BusinessUnitName
	{
		get
		{
			return this._BusinessUnitName;
		}
		set
		{
			if ((this._BusinessUnitName != value))
			{
				this.OnBusinessUnitNameChanging(value);
				this.SendPropertyChanging();
				this._BusinessUnitName = value;
				this.SendPropertyChanged("BusinessUnitName");
				this.OnBusinessUnitNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessID", DbType="Int")]
	public System.Nullable<int> BusinessID
	{
		get
		{
			return this._BusinessID;
		}
		set
		{
			if ((this._BusinessID != value))
			{
				this.OnBusinessIDChanging(value);
				this.SendPropertyChanging();
				this._BusinessID = value;
				this.SendPropertyChanged("BusinessID");
				this.OnBusinessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Bussiness")]
public partial class tbl_Bussiness : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BusinessID;
	
	private string _BusinessName;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessIDChanging(int value);
    partial void OnBusinessIDChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_Bussiness()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BusinessID
	{
		get
		{
			return this._BusinessID;
		}
		set
		{
			if ((this._BusinessID != value))
			{
				this.OnBusinessIDChanging(value);
				this.SendPropertyChanging();
				this._BusinessID = value;
				this.SendPropertyChanged("BusinessID");
				this.OnBusinessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="NVarChar(100)")]
	public string BusinessName
	{
		get
		{
			return this._BusinessName;
		}
		set
		{
			if ((this._BusinessName != value))
			{
				this.OnBusinessNameChanging(value);
				this.SendPropertyChanging();
				this._BusinessName = value;
				this.SendPropertyChanged("BusinessName");
				this.OnBusinessNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Calibration")]
public partial class tbl_Calibration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CalibrationVendorID;
	
	private string _CalibrationVendorInfo;
	
	private string _CalibrationVendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalibrationVendorIDChanging(int value);
    partial void OnCalibrationVendorIDChanged();
    partial void OnCalibrationVendorInfoChanging(string value);
    partial void OnCalibrationVendorInfoChanged();
    partial void OnCalibrationVendorChanging(string value);
    partial void OnCalibrationVendorChanged();
    #endregion
	
	public tbl_Calibration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationVendorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CalibrationVendorID
	{
		get
		{
			return this._CalibrationVendorID;
		}
		set
		{
			if ((this._CalibrationVendorID != value))
			{
				this.OnCalibrationVendorIDChanging(value);
				this.SendPropertyChanging();
				this._CalibrationVendorID = value;
				this.SendPropertyChanged("CalibrationVendorID");
				this.OnCalibrationVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationVendorInfo", DbType="NVarChar(500)")]
	public string CalibrationVendorInfo
	{
		get
		{
			return this._CalibrationVendorInfo;
		}
		set
		{
			if ((this._CalibrationVendorInfo != value))
			{
				this.OnCalibrationVendorInfoChanging(value);
				this.SendPropertyChanging();
				this._CalibrationVendorInfo = value;
				this.SendPropertyChanged("CalibrationVendorInfo");
				this.OnCalibrationVendorInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationVendor", DbType="NVarChar(500)")]
	public string CalibrationVendor
	{
		get
		{
			return this._CalibrationVendor;
		}
		set
		{
			if ((this._CalibrationVendor != value))
			{
				this.OnCalibrationVendorChanging(value);
				this.SendPropertyChanging();
				this._CalibrationVendor = value;
				this.SendPropertyChanged("CalibrationVendor");
				this.OnCalibrationVendorChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Customer")]
public partial class tbl_Customer
{
	
	private int _CustomerID;
	
	private string _CustomerName;
	
	private string _CustomerAddress;
	
	private string _CusPhoneNum;
	
	private string _Email;
	
	private string _Fax;
	
	private System.Nullable<int> _CExpPlanID;
	
	private string _CExpPlanName;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	public tbl_Customer()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this._CustomerID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this._CustomerName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(100)")]
	public string CustomerAddress
	{
		get
		{
			return this._CustomerAddress;
		}
		set
		{
			if ((this._CustomerAddress != value))
			{
				this._CustomerAddress = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusPhoneNum", DbType="NVarChar(15)")]
	public string CusPhoneNum
	{
		get
		{
			return this._CusPhoneNum;
		}
		set
		{
			if ((this._CusPhoneNum != value))
			{
				this._CusPhoneNum = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(20)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(15)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this._Fax = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExpPlanID", DbType="Int")]
	public System.Nullable<int> CExpPlanID
	{
		get
		{
			return this._CExpPlanID;
		}
		set
		{
			if ((this._CExpPlanID != value))
			{
				this._CExpPlanID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CExpPlanName", DbType="NVarChar(50)")]
	public string CExpPlanName
	{
		get
		{
			return this._CExpPlanName;
		}
		set
		{
			if ((this._CExpPlanName != value))
			{
				this._CExpPlanName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this._CreatedDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this._ModifiedDate = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DefalutAttributeMenu")]
public partial class tbl_DefalutAttributeMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AttributeID;
	
	private string _AttributeName;
	
	private string _AttributeValue;
	
	private System.Nullable<bool> _IncludeOnMap;
	
	private System.Nullable<int> _UnitID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttributeIDChanging(int value);
    partial void OnAttributeIDChanged();
    partial void OnAttributeNameChanging(string value);
    partial void OnAttributeNameChanged();
    partial void OnAttributeValueChanging(string value);
    partial void OnAttributeValueChanged();
    partial void OnIncludeOnMapChanging(System.Nullable<bool> value);
    partial void OnIncludeOnMapChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_DefalutAttributeMenu()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AttributeID
	{
		get
		{
			return this._AttributeID;
		}
		set
		{
			if ((this._AttributeID != value))
			{
				this.OnAttributeIDChanging(value);
				this.SendPropertyChanging();
				this._AttributeID = value;
				this.SendPropertyChanged("AttributeID");
				this.OnAttributeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(100)")]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this.OnAttributeNameChanging(value);
				this.SendPropertyChanging();
				this._AttributeName = value;
				this.SendPropertyChanged("AttributeName");
				this.OnAttributeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValue", DbType="NVarChar(500)")]
	public string AttributeValue
	{
		get
		{
			return this._AttributeValue;
		}
		set
		{
			if ((this._AttributeValue != value))
			{
				this.OnAttributeValueChanging(value);
				this.SendPropertyChanging();
				this._AttributeValue = value;
				this.SendPropertyChanged("AttributeValue");
				this.OnAttributeValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeOnMap", DbType="Bit")]
	public System.Nullable<bool> IncludeOnMap
	{
		get
		{
			return this._IncludeOnMap;
		}
		set
		{
			if ((this._IncludeOnMap != value))
			{
				this.OnIncludeOnMapChanging(value);
				this.SendPropertyChanging();
				this._IncludeOnMap = value;
				this.SendPropertyChanged("IncludeOnMap");
				this.OnIncludeOnMapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
	public System.Nullable<int> UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DocumentLinkType")]
public partial class tbl_DocumentLinkType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LinkTypeId;
	
	private System.Nullable<int> _ProcessObjectID;
	
	private string _LinkTypeObjectID;
	
	private string _LinkTypeSymbol;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkTypeIdChanging(int value);
    partial void OnLinkTypeIdChanged();
    partial void OnProcessObjectIDChanging(System.Nullable<int> value);
    partial void OnProcessObjectIDChanged();
    partial void OnLinkTypeObjectIDChanging(string value);
    partial void OnLinkTypeObjectIDChanged();
    partial void OnLinkTypeSymbolChanging(string value);
    partial void OnLinkTypeSymbolChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_DocumentLinkType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LinkTypeId
	{
		get
		{
			return this._LinkTypeId;
		}
		set
		{
			if ((this._LinkTypeId != value))
			{
				this.OnLinkTypeIdChanging(value);
				this.SendPropertyChanging();
				this._LinkTypeId = value;
				this.SendPropertyChanged("LinkTypeId");
				this.OnLinkTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjectID", DbType="Int")]
	public System.Nullable<int> ProcessObjectID
	{
		get
		{
			return this._ProcessObjectID;
		}
		set
		{
			if ((this._ProcessObjectID != value))
			{
				this.OnProcessObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjectID = value;
				this.SendPropertyChanged("ProcessObjectID");
				this.OnProcessObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTypeObjectID", DbType="NVarChar(100)")]
	public string LinkTypeObjectID
	{
		get
		{
			return this._LinkTypeObjectID;
		}
		set
		{
			if ((this._LinkTypeObjectID != value))
			{
				this.OnLinkTypeObjectIDChanging(value);
				this.SendPropertyChanging();
				this._LinkTypeObjectID = value;
				this.SendPropertyChanged("LinkTypeObjectID");
				this.OnLinkTypeObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTypeSymbol", DbType="NVarChar(100)")]
	public string LinkTypeSymbol
	{
		get
		{
			return this._LinkTypeSymbol;
		}
		set
		{
			if ((this._LinkTypeSymbol != value))
			{
				this.OnLinkTypeSymbolChanging(value);
				this.SendPropertyChanging();
				this._LinkTypeSymbol = value;
				this.SendPropertyChanged("LinkTypeSymbol");
				this.OnLinkTypeSymbolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_HandOffData")]
public partial class tbl_HandOffData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HOID;
	
	private System.Nullable<int> _SytemIOID;
	
	private System.Nullable<int> _HOToID;
	
	private string _HOOutputType;
	
	private string _HOOutputName;
	
	private System.Nullable<bool> _IncludeonMap;
	
	private System.Nullable<int> _HOInputID;
	
	private string _HOInputLink;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOIDChanging(int value);
    partial void OnHOIDChanged();
    partial void OnSytemIOIDChanging(System.Nullable<int> value);
    partial void OnSytemIOIDChanged();
    partial void OnHOToIDChanging(System.Nullable<int> value);
    partial void OnHOToIDChanged();
    partial void OnHOOutputTypeChanging(string value);
    partial void OnHOOutputTypeChanged();
    partial void OnHOOutputNameChanging(string value);
    partial void OnHOOutputNameChanged();
    partial void OnIncludeonMapChanging(System.Nullable<bool> value);
    partial void OnIncludeonMapChanged();
    partial void OnHOInputIDChanging(System.Nullable<int> value);
    partial void OnHOInputIDChanged();
    partial void OnHOInputLinkChanging(string value);
    partial void OnHOInputLinkChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_HandOffData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HOID
	{
		get
		{
			return this._HOID;
		}
		set
		{
			if ((this._HOID != value))
			{
				this.OnHOIDChanging(value);
				this.SendPropertyChanging();
				this._HOID = value;
				this.SendPropertyChanged("HOID");
				this.OnHOIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SytemIOID", DbType="Int")]
	public System.Nullable<int> SytemIOID
	{
		get
		{
			return this._SytemIOID;
		}
		set
		{
			if ((this._SytemIOID != value))
			{
				this.OnSytemIOIDChanging(value);
				this.SendPropertyChanging();
				this._SytemIOID = value;
				this.SendPropertyChanged("SytemIOID");
				this.OnSytemIOIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOToID", DbType="Int")]
	public System.Nullable<int> HOToID
	{
		get
		{
			return this._HOToID;
		}
		set
		{
			if ((this._HOToID != value))
			{
				this.OnHOToIDChanging(value);
				this.SendPropertyChanging();
				this._HOToID = value;
				this.SendPropertyChanged("HOToID");
				this.OnHOToIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOOutputType", DbType="NVarChar(50)")]
	public string HOOutputType
	{
		get
		{
			return this._HOOutputType;
		}
		set
		{
			if ((this._HOOutputType != value))
			{
				this.OnHOOutputTypeChanging(value);
				this.SendPropertyChanging();
				this._HOOutputType = value;
				this.SendPropertyChanged("HOOutputType");
				this.OnHOOutputTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOOutputName", DbType="NVarChar(50)")]
	public string HOOutputName
	{
		get
		{
			return this._HOOutputName;
		}
		set
		{
			if ((this._HOOutputName != value))
			{
				this.OnHOOutputNameChanging(value);
				this.SendPropertyChanging();
				this._HOOutputName = value;
				this.SendPropertyChanged("HOOutputName");
				this.OnHOOutputNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeonMap", DbType="Bit")]
	public System.Nullable<bool> IncludeonMap
	{
		get
		{
			return this._IncludeonMap;
		}
		set
		{
			if ((this._IncludeonMap != value))
			{
				this.OnIncludeonMapChanging(value);
				this.SendPropertyChanging();
				this._IncludeonMap = value;
				this.SendPropertyChanged("IncludeonMap");
				this.OnIncludeonMapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOInputID", DbType="Int")]
	public System.Nullable<int> HOInputID
	{
		get
		{
			return this._HOInputID;
		}
		set
		{
			if ((this._HOInputID != value))
			{
				this.OnHOInputIDChanging(value);
				this.SendPropertyChanging();
				this._HOInputID = value;
				this.SendPropertyChanged("HOInputID");
				this.OnHOInputIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOInputLink", DbType="NVarChar(50)")]
	public string HOInputLink
	{
		get
		{
			return this._HOInputLink;
		}
		set
		{
			if ((this._HOInputLink != value))
			{
				this.OnHOInputLinkChanging(value);
				this.SendPropertyChanging();
				this._HOInputLink = value;
				this.SendPropertyChanged("HOInputLink");
				this.OnHOInputLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Industries")]
public partial class tbl_Industry
{
	
	private System.Nullable<int> _ID;
	
	private string _Name;
	
	public tbl_Industry()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
	public System.Nullable<int> ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_InformationInputs")]
public partial class tbl_InformationInput : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LinkID;
	
	private string _LinkName;
	
	private string _Link;
	
	private System.Nullable<int> _LinkType;
	
	private System.Nullable<bool> _IncludeOnMap;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _ProcessObjectID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    partial void OnLinkNameChanging(string value);
    partial void OnLinkNameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnLinkTypeChanging(System.Nullable<int> value);
    partial void OnLinkTypeChanged();
    partial void OnIncludeOnMapChanging(System.Nullable<bool> value);
    partial void OnIncludeOnMapChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnProcessObjectIDChanging(System.Nullable<int> value);
    partial void OnProcessObjectIDChanged();
    #endregion
	
	public tbl_InformationInput()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LinkID
	{
		get
		{
			return this._LinkID;
		}
		set
		{
			if ((this._LinkID != value))
			{
				this.OnLinkIDChanging(value);
				this.SendPropertyChanging();
				this._LinkID = value;
				this.SendPropertyChanged("LinkID");
				this.OnLinkIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkName", DbType="NVarChar(100)")]
	public string LinkName
	{
		get
		{
			return this._LinkName;
		}
		set
		{
			if ((this._LinkName != value))
			{
				this.OnLinkNameChanging(value);
				this.SendPropertyChanging();
				this._LinkName = value;
				this.SendPropertyChanged("LinkName");
				this.OnLinkNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(200)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkType", DbType="Int")]
	public System.Nullable<int> LinkType
	{
		get
		{
			return this._LinkType;
		}
		set
		{
			if ((this._LinkType != value))
			{
				this.OnLinkTypeChanging(value);
				this.SendPropertyChanging();
				this._LinkType = value;
				this.SendPropertyChanged("LinkType");
				this.OnLinkTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeOnMap", DbType="Bit")]
	public System.Nullable<bool> IncludeOnMap
	{
		get
		{
			return this._IncludeOnMap;
		}
		set
		{
			if ((this._IncludeOnMap != value))
			{
				this.OnIncludeOnMapChanging(value);
				this.SendPropertyChanging();
				this._IncludeOnMap = value;
				this.SendPropertyChanged("IncludeOnMap");
				this.OnIncludeOnMapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjectID", DbType="Int")]
	public System.Nullable<int> ProcessObjectID
	{
		get
		{
			return this._ProcessObjectID;
		}
		set
		{
			if ((this._ProcessObjectID != value))
			{
				this.OnProcessObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjectID = value;
				this.SendPropertyChanged("ProcessObjectID");
				this.OnProcessObjectIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_InputType")]
public partial class tbl_InputType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public tbl_InputType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_InvantoryTriangle")]
public partial class tbl_InvantoryTriangle : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _InvantoryTriangleID;
	
	private System.Nullable<int> _ProcessObjID;
	
	private System.Nullable<int> _CT;
	
	private System.Nullable<int> _Doller;
	
	private System.Nullable<int> _Time;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _SourceType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvantoryTriangleIDChanging(int value);
    partial void OnInvantoryTriangleIDChanged();
    partial void OnProcessObjIDChanging(System.Nullable<int> value);
    partial void OnProcessObjIDChanged();
    partial void OnCTChanging(System.Nullable<int> value);
    partial void OnCTChanged();
    partial void OnDollerChanging(System.Nullable<int> value);
    partial void OnDollerChanged();
    partial void OnTimeChanging(System.Nullable<int> value);
    partial void OnTimeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnSourceTypeChanging(System.Nullable<int> value);
    partial void OnSourceTypeChanged();
    #endregion
	
	public tbl_InvantoryTriangle()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvantoryTriangleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int InvantoryTriangleID
	{
		get
		{
			return this._InvantoryTriangleID;
		}
		set
		{
			if ((this._InvantoryTriangleID != value))
			{
				this.OnInvantoryTriangleIDChanging(value);
				this.SendPropertyChanging();
				this._InvantoryTriangleID = value;
				this.SendPropertyChanged("InvantoryTriangleID");
				this.OnInvantoryTriangleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjID", DbType="Int")]
	public System.Nullable<int> ProcessObjID
	{
		get
		{
			return this._ProcessObjID;
		}
		set
		{
			if ((this._ProcessObjID != value))
			{
				this.OnProcessObjIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjID = value;
				this.SendPropertyChanged("ProcessObjID");
				this.OnProcessObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CT", DbType="Int")]
	public System.Nullable<int> CT
	{
		get
		{
			return this._CT;
		}
		set
		{
			if ((this._CT != value))
			{
				this.OnCTChanging(value);
				this.SendPropertyChanging();
				this._CT = value;
				this.SendPropertyChanged("CT");
				this.OnCTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doller", DbType="Int")]
	public System.Nullable<int> Doller
	{
		get
		{
			return this._Doller;
		}
		set
		{
			if ((this._Doller != value))
			{
				this.OnDollerChanging(value);
				this.SendPropertyChanging();
				this._Doller = value;
				this.SendPropertyChanged("Doller");
				this.OnDollerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int")]
	public System.Nullable<int> Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="Int")]
	public System.Nullable<int> SourceType
	{
		get
		{
			return this._SourceType;
		}
		set
		{
			if ((this._SourceType != value))
			{
				this.OnSourceTypeChanging(value);
				this.SendPropertyChanging();
				this._SourceType = value;
				this.SendPropertyChanged("SourceType");
				this.OnSourceTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_MachineList")]
public partial class tbl_MachineList : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MachineID;
	
	private System.Nullable<int> _ProcessObjectID;
	
	private string _MachineName;
	
	private string _MachineType;
	
	private string _MachinePhoto;
	
	private System.Nullable<int> _PMScheduleID;
	
	private string _MTBF;
	
	private string _MTTR;
	
	private System.Nullable<double> _MaintenanceCost;
	
	private System.Nullable<double> _PurchasePrice;
	
	private System.Nullable<double> _BookValue;
	
	private string _RemainingLife;
	
	private System.Nullable<int> _ManualID;
	
	private System.Nullable<int> _PartsListID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineIDChanging(int value);
    partial void OnMachineIDChanged();
    partial void OnProcessObjectIDChanging(System.Nullable<int> value);
    partial void OnProcessObjectIDChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnMachineTypeChanging(string value);
    partial void OnMachineTypeChanged();
    partial void OnMachinePhotoChanging(string value);
    partial void OnMachinePhotoChanged();
    partial void OnPMScheduleIDChanging(System.Nullable<int> value);
    partial void OnPMScheduleIDChanged();
    partial void OnMTBFChanging(string value);
    partial void OnMTBFChanged();
    partial void OnMTTRChanging(string value);
    partial void OnMTTRChanged();
    partial void OnMaintenanceCostChanging(System.Nullable<double> value);
    partial void OnMaintenanceCostChanged();
    partial void OnPurchasePriceChanging(System.Nullable<double> value);
    partial void OnPurchasePriceChanged();
    partial void OnBookValueChanging(System.Nullable<double> value);
    partial void OnBookValueChanged();
    partial void OnRemainingLifeChanging(string value);
    partial void OnRemainingLifeChanged();
    partial void OnManualIDChanging(System.Nullable<int> value);
    partial void OnManualIDChanged();
    partial void OnPartsListIDChanging(System.Nullable<int> value);
    partial void OnPartsListIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_MachineList()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MachineID
	{
		get
		{
			return this._MachineID;
		}
		set
		{
			if ((this._MachineID != value))
			{
				this.OnMachineIDChanging(value);
				this.SendPropertyChanging();
				this._MachineID = value;
				this.SendPropertyChanged("MachineID");
				this.OnMachineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjectID", DbType="Int")]
	public System.Nullable<int> ProcessObjectID
	{
		get
		{
			return this._ProcessObjectID;
		}
		set
		{
			if ((this._ProcessObjectID != value))
			{
				this.OnProcessObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjectID = value;
				this.SendPropertyChanged("ProcessObjectID");
				this.OnProcessObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(50)")]
	public string MachineName
	{
		get
		{
			return this._MachineName;
		}
		set
		{
			if ((this._MachineName != value))
			{
				this.OnMachineNameChanging(value);
				this.SendPropertyChanging();
				this._MachineName = value;
				this.SendPropertyChanged("MachineName");
				this.OnMachineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineType", DbType="NVarChar(50)")]
	public string MachineType
	{
		get
		{
			return this._MachineType;
		}
		set
		{
			if ((this._MachineType != value))
			{
				this.OnMachineTypeChanging(value);
				this.SendPropertyChanging();
				this._MachineType = value;
				this.SendPropertyChanged("MachineType");
				this.OnMachineTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachinePhoto", DbType="NVarChar(50)")]
	public string MachinePhoto
	{
		get
		{
			return this._MachinePhoto;
		}
		set
		{
			if ((this._MachinePhoto != value))
			{
				this.OnMachinePhotoChanging(value);
				this.SendPropertyChanging();
				this._MachinePhoto = value;
				this.SendPropertyChanged("MachinePhoto");
				this.OnMachinePhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMScheduleID", DbType="Int")]
	public System.Nullable<int> PMScheduleID
	{
		get
		{
			return this._PMScheduleID;
		}
		set
		{
			if ((this._PMScheduleID != value))
			{
				this.OnPMScheduleIDChanging(value);
				this.SendPropertyChanging();
				this._PMScheduleID = value;
				this.SendPropertyChanged("PMScheduleID");
				this.OnPMScheduleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTBF", DbType="NVarChar(50)")]
	public string MTBF
	{
		get
		{
			return this._MTBF;
		}
		set
		{
			if ((this._MTBF != value))
			{
				this.OnMTBFChanging(value);
				this.SendPropertyChanging();
				this._MTBF = value;
				this.SendPropertyChanged("MTBF");
				this.OnMTBFChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTTR", DbType="NVarChar(50)")]
	public string MTTR
	{
		get
		{
			return this._MTTR;
		}
		set
		{
			if ((this._MTTR != value))
			{
				this.OnMTTRChanging(value);
				this.SendPropertyChanging();
				this._MTTR = value;
				this.SendPropertyChanged("MTTR");
				this.OnMTTRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceCost", DbType="Float")]
	public System.Nullable<double> MaintenanceCost
	{
		get
		{
			return this._MaintenanceCost;
		}
		set
		{
			if ((this._MaintenanceCost != value))
			{
				this.OnMaintenanceCostChanging(value);
				this.SendPropertyChanging();
				this._MaintenanceCost = value;
				this.SendPropertyChanged("MaintenanceCost");
				this.OnMaintenanceCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Float")]
	public System.Nullable<double> PurchasePrice
	{
		get
		{
			return this._PurchasePrice;
		}
		set
		{
			if ((this._PurchasePrice != value))
			{
				this.OnPurchasePriceChanging(value);
				this.SendPropertyChanging();
				this._PurchasePrice = value;
				this.SendPropertyChanged("PurchasePrice");
				this.OnPurchasePriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookValue", DbType="Float")]
	public System.Nullable<double> BookValue
	{
		get
		{
			return this._BookValue;
		}
		set
		{
			if ((this._BookValue != value))
			{
				this.OnBookValueChanging(value);
				this.SendPropertyChanging();
				this._BookValue = value;
				this.SendPropertyChanged("BookValue");
				this.OnBookValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingLife", DbType="NVarChar(50)")]
	public string RemainingLife
	{
		get
		{
			return this._RemainingLife;
		}
		set
		{
			if ((this._RemainingLife != value))
			{
				this.OnRemainingLifeChanging(value);
				this.SendPropertyChanging();
				this._RemainingLife = value;
				this.SendPropertyChanged("RemainingLife");
				this.OnRemainingLifeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualID", DbType="Int")]
	public System.Nullable<int> ManualID
	{
		get
		{
			return this._ManualID;
		}
		set
		{
			if ((this._ManualID != value))
			{
				this.OnManualIDChanging(value);
				this.SendPropertyChanging();
				this._ManualID = value;
				this.SendPropertyChanged("ManualID");
				this.OnManualIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsListID", DbType="Int")]
	public System.Nullable<int> PartsListID
	{
		get
		{
			return this._PartsListID;
		}
		set
		{
			if ((this._PartsListID != value))
			{
				this.OnPartsListIDChanging(value);
				this.SendPropertyChanging();
				this._PartsListID = value;
				this.SendPropertyChanged("PartsListID");
				this.OnPartsListIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ParallelRelationship")]
public partial class tbl_ParallelRelationship : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _ProcessObjID;
	
	private System.Nullable<int> _NeighbourActivityID;
	
	private System.Nullable<int> _Type;
	
	private System.Nullable<int> _ProcessID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProcessObjIDChanging(System.Nullable<int> value);
    partial void OnProcessObjIDChanged();
    partial void OnNeighbourActivityIDChanging(System.Nullable<int> value);
    partial void OnNeighbourActivityIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    #endregion
	
	public tbl_ParallelRelationship()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjID", DbType="Int")]
	public System.Nullable<int> ProcessObjID
	{
		get
		{
			return this._ProcessObjID;
		}
		set
		{
			if ((this._ProcessObjID != value))
			{
				this.OnProcessObjIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjID = value;
				this.SendPropertyChanged("ProcessObjID");
				this.OnProcessObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeighbourActivityID", DbType="Int")]
	public System.Nullable<int> NeighbourActivityID
	{
		get
		{
			return this._NeighbourActivityID;
		}
		set
		{
			if ((this._NeighbourActivityID != value))
			{
				this.OnNeighbourActivityIDChanging(value);
				this.SendPropertyChanging();
				this._NeighbourActivityID = value;
				this.SendPropertyChanged("NeighbourActivityID");
				this.OnNeighbourActivityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
	public System.Nullable<int> Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_PPESAnPDESA")]
public partial class tbl_PPESAnPDESA : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FormID;
	
	private System.Nullable<int> _FormType;
	
	private System.Nullable<int> _ProcessID;
	
	private System.Nullable<int> _ProcessObjectID;
	
	private string _ProductFeatureAdded;
	
	private string _FunctionofProductFeature;
	
	private string _ErrorEvent;
	
	private string _ErrorEventTransferFunction;
	
	private string _Actions;
	
	private System.Nullable<bool> _ActionCriticalParameter;
	
	private string _Conditions;
	
	private System.Nullable<bool> _ConditonCriticalParameter;
	
	private System.Nullable<int> _InitialSeverity;
	
	private System.Nullable<int> _InitialFrequency;
	
	private System.Nullable<int> _InitialDetection;
	
	private System.Nullable<int> _IntialRPN;
	
	private string _Countermeasure;
	
	private System.Nullable<int> _CountermeasureEffectiveness;
	
	private System.Nullable<int> _FinalSeverity;
	
	private System.Nullable<int> _FinalFrequency;
	
	private System.Nullable<int> _FinalDetection;
	
	private System.Nullable<int> _FinalRPN;
	
	private string _Cpk;
	
	private string _Cp;
	
	private string _Ppk;
	
	private string _LongtermSigma;
	
	private string _ShorttermSigma;
	
	private string _ZScore;
	
	private System.Nullable<int> _Sequence;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormIDChanging(int value);
    partial void OnFormIDChanged();
    partial void OnFormTypeChanging(System.Nullable<int> value);
    partial void OnFormTypeChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnProcessObjectIDChanging(System.Nullable<int> value);
    partial void OnProcessObjectIDChanged();
    partial void OnProductFeatureAddedChanging(string value);
    partial void OnProductFeatureAddedChanged();
    partial void OnFunctionofProductFeatureChanging(string value);
    partial void OnFunctionofProductFeatureChanged();
    partial void OnErrorEventChanging(string value);
    partial void OnErrorEventChanged();
    partial void OnErrorEventTransferFunctionChanging(string value);
    partial void OnErrorEventTransferFunctionChanged();
    partial void OnActionsChanging(string value);
    partial void OnActionsChanged();
    partial void OnActionCriticalParameterChanging(System.Nullable<bool> value);
    partial void OnActionCriticalParameterChanged();
    partial void OnConditionsChanging(string value);
    partial void OnConditionsChanged();
    partial void OnConditonCriticalParameterChanging(System.Nullable<bool> value);
    partial void OnConditonCriticalParameterChanged();
    partial void OnInitialSeverityChanging(System.Nullable<int> value);
    partial void OnInitialSeverityChanged();
    partial void OnInitialFrequencyChanging(System.Nullable<int> value);
    partial void OnInitialFrequencyChanged();
    partial void OnInitialDetectionChanging(System.Nullable<int> value);
    partial void OnInitialDetectionChanged();
    partial void OnIntialRPNChanging(System.Nullable<int> value);
    partial void OnIntialRPNChanged();
    partial void OnCountermeasureChanging(string value);
    partial void OnCountermeasureChanged();
    partial void OnCountermeasureEffectivenessChanging(System.Nullable<int> value);
    partial void OnCountermeasureEffectivenessChanged();
    partial void OnFinalSeverityChanging(System.Nullable<int> value);
    partial void OnFinalSeverityChanged();
    partial void OnFinalFrequencyChanging(System.Nullable<int> value);
    partial void OnFinalFrequencyChanged();
    partial void OnFinalDetectionChanging(System.Nullable<int> value);
    partial void OnFinalDetectionChanged();
    partial void OnFinalRPNChanging(System.Nullable<int> value);
    partial void OnFinalRPNChanged();
    partial void OnCpkChanging(string value);
    partial void OnCpkChanged();
    partial void OnCpChanging(string value);
    partial void OnCpChanged();
    partial void OnPpkChanging(string value);
    partial void OnPpkChanged();
    partial void OnLongtermSigmaChanging(string value);
    partial void OnLongtermSigmaChanged();
    partial void OnShorttermSigmaChanging(string value);
    partial void OnShorttermSigmaChanged();
    partial void OnZScoreChanging(string value);
    partial void OnZScoreChanged();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    #endregion
	
	public tbl_PPESAnPDESA()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FormID
	{
		get
		{
			return this._FormID;
		}
		set
		{
			if ((this._FormID != value))
			{
				this.OnFormIDChanging(value);
				this.SendPropertyChanging();
				this._FormID = value;
				this.SendPropertyChanged("FormID");
				this.OnFormIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormType", DbType="Int")]
	public System.Nullable<int> FormType
	{
		get
		{
			return this._FormType;
		}
		set
		{
			if ((this._FormType != value))
			{
				this.OnFormTypeChanging(value);
				this.SendPropertyChanging();
				this._FormType = value;
				this.SendPropertyChanged("FormType");
				this.OnFormTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjectID", DbType="Int")]
	public System.Nullable<int> ProcessObjectID
	{
		get
		{
			return this._ProcessObjectID;
		}
		set
		{
			if ((this._ProcessObjectID != value))
			{
				this.OnProcessObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjectID = value;
				this.SendPropertyChanged("ProcessObjectID");
				this.OnProcessObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductFeatureAdded", DbType="NVarChar(100)")]
	public string ProductFeatureAdded
	{
		get
		{
			return this._ProductFeatureAdded;
		}
		set
		{
			if ((this._ProductFeatureAdded != value))
			{
				this.OnProductFeatureAddedChanging(value);
				this.SendPropertyChanging();
				this._ProductFeatureAdded = value;
				this.SendPropertyChanged("ProductFeatureAdded");
				this.OnProductFeatureAddedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionofProductFeature", DbType="NVarChar(100)")]
	public string FunctionofProductFeature
	{
		get
		{
			return this._FunctionofProductFeature;
		}
		set
		{
			if ((this._FunctionofProductFeature != value))
			{
				this.OnFunctionofProductFeatureChanging(value);
				this.SendPropertyChanging();
				this._FunctionofProductFeature = value;
				this.SendPropertyChanged("FunctionofProductFeature");
				this.OnFunctionofProductFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorEvent", DbType="NVarChar(100)")]
	public string ErrorEvent
	{
		get
		{
			return this._ErrorEvent;
		}
		set
		{
			if ((this._ErrorEvent != value))
			{
				this.OnErrorEventChanging(value);
				this.SendPropertyChanging();
				this._ErrorEvent = value;
				this.SendPropertyChanged("ErrorEvent");
				this.OnErrorEventChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorEventTransferFunction", DbType="NVarChar(100)")]
	public string ErrorEventTransferFunction
	{
		get
		{
			return this._ErrorEventTransferFunction;
		}
		set
		{
			if ((this._ErrorEventTransferFunction != value))
			{
				this.OnErrorEventTransferFunctionChanging(value);
				this.SendPropertyChanging();
				this._ErrorEventTransferFunction = value;
				this.SendPropertyChanged("ErrorEventTransferFunction");
				this.OnErrorEventTransferFunctionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actions", DbType="NVarChar(100)")]
	public string Actions
	{
		get
		{
			return this._Actions;
		}
		set
		{
			if ((this._Actions != value))
			{
				this.OnActionsChanging(value);
				this.SendPropertyChanging();
				this._Actions = value;
				this.SendPropertyChanged("Actions");
				this.OnActionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionCriticalParameter", DbType="Bit")]
	public System.Nullable<bool> ActionCriticalParameter
	{
		get
		{
			return this._ActionCriticalParameter;
		}
		set
		{
			if ((this._ActionCriticalParameter != value))
			{
				this.OnActionCriticalParameterChanging(value);
				this.SendPropertyChanging();
				this._ActionCriticalParameter = value;
				this.SendPropertyChanged("ActionCriticalParameter");
				this.OnActionCriticalParameterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conditions", DbType="NVarChar(100)")]
	public string Conditions
	{
		get
		{
			return this._Conditions;
		}
		set
		{
			if ((this._Conditions != value))
			{
				this.OnConditionsChanging(value);
				this.SendPropertyChanging();
				this._Conditions = value;
				this.SendPropertyChanged("Conditions");
				this.OnConditionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditonCriticalParameter", DbType="Bit")]
	public System.Nullable<bool> ConditonCriticalParameter
	{
		get
		{
			return this._ConditonCriticalParameter;
		}
		set
		{
			if ((this._ConditonCriticalParameter != value))
			{
				this.OnConditonCriticalParameterChanging(value);
				this.SendPropertyChanging();
				this._ConditonCriticalParameter = value;
				this.SendPropertyChanged("ConditonCriticalParameter");
				this.OnConditonCriticalParameterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialSeverity", DbType="Int")]
	public System.Nullable<int> InitialSeverity
	{
		get
		{
			return this._InitialSeverity;
		}
		set
		{
			if ((this._InitialSeverity != value))
			{
				this.OnInitialSeverityChanging(value);
				this.SendPropertyChanging();
				this._InitialSeverity = value;
				this.SendPropertyChanged("InitialSeverity");
				this.OnInitialSeverityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialFrequency", DbType="Int")]
	public System.Nullable<int> InitialFrequency
	{
		get
		{
			return this._InitialFrequency;
		}
		set
		{
			if ((this._InitialFrequency != value))
			{
				this.OnInitialFrequencyChanging(value);
				this.SendPropertyChanging();
				this._InitialFrequency = value;
				this.SendPropertyChanged("InitialFrequency");
				this.OnInitialFrequencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialDetection", DbType="Int")]
	public System.Nullable<int> InitialDetection
	{
		get
		{
			return this._InitialDetection;
		}
		set
		{
			if ((this._InitialDetection != value))
			{
				this.OnInitialDetectionChanging(value);
				this.SendPropertyChanging();
				this._InitialDetection = value;
				this.SendPropertyChanged("InitialDetection");
				this.OnInitialDetectionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntialRPN", DbType="Int")]
	public System.Nullable<int> IntialRPN
	{
		get
		{
			return this._IntialRPN;
		}
		set
		{
			if ((this._IntialRPN != value))
			{
				this.OnIntialRPNChanging(value);
				this.SendPropertyChanging();
				this._IntialRPN = value;
				this.SendPropertyChanged("IntialRPN");
				this.OnIntialRPNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Countermeasure", DbType="NVarChar(100)")]
	public string Countermeasure
	{
		get
		{
			return this._Countermeasure;
		}
		set
		{
			if ((this._Countermeasure != value))
			{
				this.OnCountermeasureChanging(value);
				this.SendPropertyChanging();
				this._Countermeasure = value;
				this.SendPropertyChanged("Countermeasure");
				this.OnCountermeasureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountermeasureEffectiveness", DbType="Int")]
	public System.Nullable<int> CountermeasureEffectiveness
	{
		get
		{
			return this._CountermeasureEffectiveness;
		}
		set
		{
			if ((this._CountermeasureEffectiveness != value))
			{
				this.OnCountermeasureEffectivenessChanging(value);
				this.SendPropertyChanging();
				this._CountermeasureEffectiveness = value;
				this.SendPropertyChanged("CountermeasureEffectiveness");
				this.OnCountermeasureEffectivenessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalSeverity", DbType="Int")]
	public System.Nullable<int> FinalSeverity
	{
		get
		{
			return this._FinalSeverity;
		}
		set
		{
			if ((this._FinalSeverity != value))
			{
				this.OnFinalSeverityChanging(value);
				this.SendPropertyChanging();
				this._FinalSeverity = value;
				this.SendPropertyChanged("FinalSeverity");
				this.OnFinalSeverityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalFrequency", DbType="Int")]
	public System.Nullable<int> FinalFrequency
	{
		get
		{
			return this._FinalFrequency;
		}
		set
		{
			if ((this._FinalFrequency != value))
			{
				this.OnFinalFrequencyChanging(value);
				this.SendPropertyChanging();
				this._FinalFrequency = value;
				this.SendPropertyChanged("FinalFrequency");
				this.OnFinalFrequencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDetection", DbType="Int")]
	public System.Nullable<int> FinalDetection
	{
		get
		{
			return this._FinalDetection;
		}
		set
		{
			if ((this._FinalDetection != value))
			{
				this.OnFinalDetectionChanging(value);
				this.SendPropertyChanging();
				this._FinalDetection = value;
				this.SendPropertyChanged("FinalDetection");
				this.OnFinalDetectionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalRPN", DbType="Int")]
	public System.Nullable<int> FinalRPN
	{
		get
		{
			return this._FinalRPN;
		}
		set
		{
			if ((this._FinalRPN != value))
			{
				this.OnFinalRPNChanging(value);
				this.SendPropertyChanging();
				this._FinalRPN = value;
				this.SendPropertyChanged("FinalRPN");
				this.OnFinalRPNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpk", DbType="NVarChar(100)")]
	public string Cpk
	{
		get
		{
			return this._Cpk;
		}
		set
		{
			if ((this._Cpk != value))
			{
				this.OnCpkChanging(value);
				this.SendPropertyChanging();
				this._Cpk = value;
				this.SendPropertyChanged("Cpk");
				this.OnCpkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cp", DbType="NVarChar(100)")]
	public string Cp
	{
		get
		{
			return this._Cp;
		}
		set
		{
			if ((this._Cp != value))
			{
				this.OnCpChanging(value);
				this.SendPropertyChanging();
				this._Cp = value;
				this.SendPropertyChanged("Cp");
				this.OnCpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ppk", DbType="NVarChar(100)")]
	public string Ppk
	{
		get
		{
			return this._Ppk;
		}
		set
		{
			if ((this._Ppk != value))
			{
				this.OnPpkChanging(value);
				this.SendPropertyChanging();
				this._Ppk = value;
				this.SendPropertyChanged("Ppk");
				this.OnPpkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongtermSigma", DbType="NVarChar(100)")]
	public string LongtermSigma
	{
		get
		{
			return this._LongtermSigma;
		}
		set
		{
			if ((this._LongtermSigma != value))
			{
				this.OnLongtermSigmaChanging(value);
				this.SendPropertyChanging();
				this._LongtermSigma = value;
				this.SendPropertyChanged("LongtermSigma");
				this.OnLongtermSigmaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShorttermSigma", DbType="NVarChar(100)")]
	public string ShorttermSigma
	{
		get
		{
			return this._ShorttermSigma;
		}
		set
		{
			if ((this._ShorttermSigma != value))
			{
				this.OnShorttermSigmaChanging(value);
				this.SendPropertyChanging();
				this._ShorttermSigma = value;
				this.SendPropertyChanged("ShorttermSigma");
				this.OnShorttermSigmaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZScore", DbType="NVarChar(100)")]
	public string ZScore
	{
		get
		{
			return this._ZScore;
		}
		set
		{
			if ((this._ZScore != value))
			{
				this.OnZScoreChanging(value);
				this.SendPropertyChanging();
				this._ZScore = value;
				this.SendPropertyChanged("ZScore");
				this.OnZScoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int")]
	public System.Nullable<int> Sequence
	{
		get
		{
			return this._Sequence;
		}
		set
		{
			if ((this._Sequence != value))
			{
				this.OnSequenceChanging(value);
				this.SendPropertyChanging();
				this._Sequence = value;
				this.SendPropertyChanged("Sequence");
				this.OnSequenceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Process")]
public partial class tbl_Process : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProcessID;
	
	private string _ProcessName;
	
	private string _FunctionName;
	
	private System.Nullable<int> _SystemID;
	
	private System.Nullable<int> _TypeID;
	
	private System.Nullable<int> _ParentID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _UserRegisterID;
	
	private System.Nullable<int> _CompanyID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIDChanging(int value);
    partial void OnProcessIDChanged();
    partial void OnProcessNameChanging(string value);
    partial void OnProcessNameChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnSystemIDChanging(System.Nullable<int> value);
    partial void OnSystemIDChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnUserRegisterIDChanging(System.Nullable<int> value);
    partial void OnUserRegisterIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
	
	public tbl_Process()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessName", DbType="NVarChar(100)")]
	public string ProcessName
	{
		get
		{
			return this._ProcessName;
		}
		set
		{
			if ((this._ProcessName != value))
			{
				this.OnProcessNameChanging(value);
				this.SendPropertyChanging();
				this._ProcessName = value;
				this.SendPropertyChanged("ProcessName");
				this.OnProcessNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="NVarChar(200)")]
	public string FunctionName
	{
		get
		{
			return this._FunctionName;
		}
		set
		{
			if ((this._FunctionName != value))
			{
				this.OnFunctionNameChanging(value);
				this.SendPropertyChanging();
				this._FunctionName = value;
				this.SendPropertyChanged("FunctionName");
				this.OnFunctionNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="Int")]
	public System.Nullable<int> SystemID
	{
		get
		{
			return this._SystemID;
		}
		set
		{
			if ((this._SystemID != value))
			{
				this.OnSystemIDChanging(value);
				this.SendPropertyChanging();
				this._SystemID = value;
				this.SendPropertyChanged("SystemID");
				this.OnSystemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
	public System.Nullable<int> TypeID
	{
		get
		{
			return this._TypeID;
		}
		set
		{
			if ((this._TypeID != value))
			{
				this.OnTypeIDChanging(value);
				this.SendPropertyChanging();
				this._TypeID = value;
				this.SendPropertyChanged("TypeID");
				this.OnTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRegisterID", DbType="Int")]
	public System.Nullable<int> UserRegisterID
	{
		get
		{
			return this._UserRegisterID;
		}
		set
		{
			if ((this._UserRegisterID != value))
			{
				this.OnUserRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._UserRegisterID = value;
				this.SendPropertyChanged("UserRegisterID");
				this.OnUserRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
	public System.Nullable<int> CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ProcessObject")]
public partial class tbl_ProcessObject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProcessObjID;
	
	private string _ProcessObjName;
	
	private System.Nullable<int> _ProcessID;
	
	private System.Nullable<int> _OrderNo;
	
	private System.Nullable<int> _Type;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _XTop;
	
	private System.Nullable<int> _YLeft;
	
	private System.Nullable<int> _Width;
	
	private System.Nullable<int> _Height;
	
	private string _Title;
	
	private System.Nullable<int> _ParallelProcessObjID;
	
	private System.Nullable<int> _Position;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessObjIDChanging(int value);
    partial void OnProcessObjIDChanged();
    partial void OnProcessObjNameChanging(string value);
    partial void OnProcessObjNameChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnXTopChanging(System.Nullable<int> value);
    partial void OnXTopChanged();
    partial void OnYLeftChanging(System.Nullable<int> value);
    partial void OnYLeftChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnParallelProcessObjIDChanging(System.Nullable<int> value);
    partial void OnParallelProcessObjIDChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    #endregion
	
	public tbl_ProcessObject()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProcessObjID
	{
		get
		{
			return this._ProcessObjID;
		}
		set
		{
			if ((this._ProcessObjID != value))
			{
				this.OnProcessObjIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjID = value;
				this.SendPropertyChanged("ProcessObjID");
				this.OnProcessObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjName", DbType="NVarChar(100)")]
	public string ProcessObjName
	{
		get
		{
			return this._ProcessObjName;
		}
		set
		{
			if ((this._ProcessObjName != value))
			{
				this.OnProcessObjNameChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjName = value;
				this.SendPropertyChanged("ProcessObjName");
				this.OnProcessObjNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<int> OrderNo
	{
		get
		{
			return this._OrderNo;
		}
		set
		{
			if ((this._OrderNo != value))
			{
				this.OnOrderNoChanging(value);
				this.SendPropertyChanging();
				this._OrderNo = value;
				this.SendPropertyChanged("OrderNo");
				this.OnOrderNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
	public System.Nullable<int> Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XTop", DbType="Int")]
	public System.Nullable<int> XTop
	{
		get
		{
			return this._XTop;
		}
		set
		{
			if ((this._XTop != value))
			{
				this.OnXTopChanging(value);
				this.SendPropertyChanging();
				this._XTop = value;
				this.SendPropertyChanged("XTop");
				this.OnXTopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YLeft", DbType="Int")]
	public System.Nullable<int> YLeft
	{
		get
		{
			return this._YLeft;
		}
		set
		{
			if ((this._YLeft != value))
			{
				this.OnYLeftChanging(value);
				this.SendPropertyChanging();
				this._YLeft = value;
				this.SendPropertyChanged("YLeft");
				this.OnYLeftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
	public System.Nullable<int> Width
	{
		get
		{
			return this._Width;
		}
		set
		{
			if ((this._Width != value))
			{
				this.OnWidthChanging(value);
				this.SendPropertyChanging();
				this._Width = value;
				this.SendPropertyChanged("Width");
				this.OnWidthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
	public System.Nullable<int> Height
	{
		get
		{
			return this._Height;
		}
		set
		{
			if ((this._Height != value))
			{
				this.OnHeightChanging(value);
				this.SendPropertyChanging();
				this._Height = value;
				this.SendPropertyChanged("Height");
				this.OnHeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParallelProcessObjID", DbType="Int")]
	public System.Nullable<int> ParallelProcessObjID
	{
		get
		{
			return this._ParallelProcessObjID;
		}
		set
		{
			if ((this._ParallelProcessObjID != value))
			{
				this.OnParallelProcessObjIDChanging(value);
				this.SendPropertyChanging();
				this._ParallelProcessObjID = value;
				this.SendPropertyChanged("ParallelProcessObjID");
				this.OnParallelProcessObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
	public System.Nullable<int> Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Product")]
public partial class tbl_Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private System.Nullable<int> _ProductFamilyID;
	
	private string _ProductName;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductFamilyIDChanging(System.Nullable<int> value);
    partial void OnProductFamilyIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_Product()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductFamilyID", DbType="Int")]
	public System.Nullable<int> ProductFamilyID
	{
		get
		{
			return this._ProductFamilyID;
		}
		set
		{
			if ((this._ProductFamilyID != value))
			{
				this.OnProductFamilyIDChanging(value);
				this.SendPropertyChanging();
				this._ProductFamilyID = value;
				this.SendPropertyChanged("ProductFamilyID");
				this.OnProductFamilyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this.OnProductNameChanging(value);
				this.SendPropertyChanging();
				this._ProductName = value;
				this.SendPropertyChanged("ProductName");
				this.OnProductNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ProductFamily")]
public partial class tbl_ProductFamily : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductFamilyID;
	
	private string _ProductFamilyName;
	
	private System.Nullable<int> _ProductLineID;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductFamilyIDChanging(int value);
    partial void OnProductFamilyIDChanged();
    partial void OnProductFamilyNameChanging(string value);
    partial void OnProductFamilyNameChanged();
    partial void OnProductLineIDChanging(System.Nullable<int> value);
    partial void OnProductLineIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_ProductFamily()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductFamilyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductFamilyID
	{
		get
		{
			return this._ProductFamilyID;
		}
		set
		{
			if ((this._ProductFamilyID != value))
			{
				this.OnProductFamilyIDChanging(value);
				this.SendPropertyChanging();
				this._ProductFamilyID = value;
				this.SendPropertyChanged("ProductFamilyID");
				this.OnProductFamilyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductFamilyName", DbType="NVarChar(100)")]
	public string ProductFamilyName
	{
		get
		{
			return this._ProductFamilyName;
		}
		set
		{
			if ((this._ProductFamilyName != value))
			{
				this.OnProductFamilyNameChanging(value);
				this.SendPropertyChanging();
				this._ProductFamilyName = value;
				this.SendPropertyChanged("ProductFamilyName");
				this.OnProductFamilyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLineID", DbType="Int")]
	public System.Nullable<int> ProductLineID
	{
		get
		{
			return this._ProductLineID;
		}
		set
		{
			if ((this._ProductLineID != value))
			{
				this.OnProductLineIDChanging(value);
				this.SendPropertyChanging();
				this._ProductLineID = value;
				this.SendPropertyChanged("ProductLineID");
				this.OnProductLineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ProductLine")]
public partial class tbl_ProductLine : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductLineID;
	
	private string _ProductLineName;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductLineIDChanging(int value);
    partial void OnProductLineIDChanged();
    partial void OnProductLineNameChanging(string value);
    partial void OnProductLineNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_ProductLine()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProductLineID
	{
		get
		{
			return this._ProductLineID;
		}
		set
		{
			if ((this._ProductLineID != value))
			{
				this.OnProductLineIDChanging(value);
				this.SendPropertyChanging();
				this._ProductLineID = value;
				this.SendPropertyChanged("ProductLineID");
				this.OnProductLineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLineName", DbType="NVarChar(100)")]
	public string ProductLineName
	{
		get
		{
			return this._ProductLineName;
		}
		set
		{
			if ((this._ProductLineName != value))
			{
				this.OnProductLineNameChanging(value);
				this.SendPropertyChanging();
				this._ProductLineName = value;
				this.SendPropertyChanged("ProductLineName");
				this.OnProductLineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Registration")]
public partial class tbl_Registration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RegisterID;
	
	private string _Username;
	
	private string _Email;
	
	private string _Password;
	
	private string _Mobile;
	
	private string _CompanyName;
	
	private string _UploadPhoto;
	
	private System.Nullable<int> _Industries;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<bool> _Status;
	
	private System.Nullable<int> _Role;
	
	private System.Nullable<int> _ParentID;
	
	private System.Nullable<bool> _IsDeleted;
	
	private string _UniqueCode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegisterIDChanging(int value);
    partial void OnRegisterIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnUploadPhotoChanging(string value);
    partial void OnUploadPhotoChanged();
    partial void OnIndustriesChanging(System.Nullable<int> value);
    partial void OnIndustriesChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnRoleChanging(System.Nullable<int> value);
    partial void OnRoleChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnUniqueCodeChanging(string value);
    partial void OnUniqueCodeChanged();
    #endregion
	
	public tbl_Registration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RegisterID
	{
		get
		{
			return this._RegisterID;
		}
		set
		{
			if ((this._RegisterID != value))
			{
				this.OnRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._RegisterID = value;
				this.SendPropertyChanged("RegisterID");
				this.OnRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX)")]
	public string CompanyName
	{
		get
		{
			return this._CompanyName;
		}
		set
		{
			if ((this._CompanyName != value))
			{
				this.OnCompanyNameChanging(value);
				this.SendPropertyChanging();
				this._CompanyName = value;
				this.SendPropertyChanged("CompanyName");
				this.OnCompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadPhoto", DbType="NVarChar(50)")]
	public string UploadPhoto
	{
		get
		{
			return this._UploadPhoto;
		}
		set
		{
			if ((this._UploadPhoto != value))
			{
				this.OnUploadPhotoChanging(value);
				this.SendPropertyChanging();
				this._UploadPhoto = value;
				this.SendPropertyChanged("UploadPhoto");
				this.OnUploadPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Industries", DbType="Int")]
	public System.Nullable<int> Industries
	{
		get
		{
			return this._Industries;
		}
		set
		{
			if ((this._Industries != value))
			{
				this.OnIndustriesChanging(value);
				this.SendPropertyChanging();
				this._Industries = value;
				this.SendPropertyChanged("Industries");
				this.OnIndustriesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
	public System.Nullable<bool> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int")]
	public System.Nullable<int> Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this.OnRoleChanging(value);
				this.SendPropertyChanging();
				this._Role = value;
				this.SendPropertyChanged("Role");
				this.OnRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueCode", DbType="NVarChar(100)")]
	public string UniqueCode
	{
		get
		{
			return this._UniqueCode;
		}
		set
		{
			if ((this._UniqueCode != value))
			{
				this.OnUniqueCodeChanging(value);
				this.SendPropertyChanging();
				this._UniqueCode = value;
				this.SendPropertyChanged("UniqueCode");
				this.OnUniqueCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_RepairLog")]
public partial class tbl_RepairLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MachineRepairID;
	
	private System.Nullable<int> _MachineID;
	
	private string _Critical;
	
	private string _TTR;
	
	private string _SkillTypeOfRepair;
	
	private string _TypeOfRepair;
	
	private string _ActualRepair;
	
	private System.Nullable<double> _CostOfRepairParts;
	
	private System.Nullable<double> _CostOfRepairLabor;
	
	private System.Nullable<double> _CostOfRepairOutsource;
	
	private string _Scheduled_Unscheduled;
	
	private string _DownTime;
	
	private string _Preventive_Predictive_Reactive;
	
	private string _RootCause;
	
	private string _Countermeasure;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineRepairIDChanging(int value);
    partial void OnMachineRepairIDChanged();
    partial void OnMachineIDChanging(System.Nullable<int> value);
    partial void OnMachineIDChanged();
    partial void OnCriticalChanging(string value);
    partial void OnCriticalChanged();
    partial void OnTTRChanging(string value);
    partial void OnTTRChanged();
    partial void OnSkillTypeOfRepairChanging(string value);
    partial void OnSkillTypeOfRepairChanged();
    partial void OnTypeOfRepairChanging(string value);
    partial void OnTypeOfRepairChanged();
    partial void OnActualRepairChanging(string value);
    partial void OnActualRepairChanged();
    partial void OnCostOfRepairPartsChanging(System.Nullable<double> value);
    partial void OnCostOfRepairPartsChanged();
    partial void OnCostOfRepairLaborChanging(System.Nullable<double> value);
    partial void OnCostOfRepairLaborChanged();
    partial void OnCostOfRepairOutsourceChanging(System.Nullable<double> value);
    partial void OnCostOfRepairOutsourceChanged();
    partial void OnScheduled_UnscheduledChanging(string value);
    partial void OnScheduled_UnscheduledChanged();
    partial void OnDownTimeChanging(string value);
    partial void OnDownTimeChanged();
    partial void OnPreventive_Predictive_ReactiveChanging(string value);
    partial void OnPreventive_Predictive_ReactiveChanged();
    partial void OnRootCauseChanging(string value);
    partial void OnRootCauseChanged();
    partial void OnCountermeasureChanging(string value);
    partial void OnCountermeasureChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_RepairLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineRepairID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MachineRepairID
	{
		get
		{
			return this._MachineRepairID;
		}
		set
		{
			if ((this._MachineRepairID != value))
			{
				this.OnMachineRepairIDChanging(value);
				this.SendPropertyChanging();
				this._MachineRepairID = value;
				this.SendPropertyChanged("MachineRepairID");
				this.OnMachineRepairIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="Int")]
	public System.Nullable<int> MachineID
	{
		get
		{
			return this._MachineID;
		}
		set
		{
			if ((this._MachineID != value))
			{
				this.OnMachineIDChanging(value);
				this.SendPropertyChanging();
				this._MachineID = value;
				this.SendPropertyChanged("MachineID");
				this.OnMachineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Critical", DbType="NVarChar(100)")]
	public string Critical
	{
		get
		{
			return this._Critical;
		}
		set
		{
			if ((this._Critical != value))
			{
				this.OnCriticalChanging(value);
				this.SendPropertyChanging();
				this._Critical = value;
				this.SendPropertyChanged("Critical");
				this.OnCriticalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTR", DbType="NVarChar(100)")]
	public string TTR
	{
		get
		{
			return this._TTR;
		}
		set
		{
			if ((this._TTR != value))
			{
				this.OnTTRChanging(value);
				this.SendPropertyChanging();
				this._TTR = value;
				this.SendPropertyChanged("TTR");
				this.OnTTRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillTypeOfRepair", DbType="NVarChar(100)")]
	public string SkillTypeOfRepair
	{
		get
		{
			return this._SkillTypeOfRepair;
		}
		set
		{
			if ((this._SkillTypeOfRepair != value))
			{
				this.OnSkillTypeOfRepairChanging(value);
				this.SendPropertyChanging();
				this._SkillTypeOfRepair = value;
				this.SendPropertyChanged("SkillTypeOfRepair");
				this.OnSkillTypeOfRepairChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRepair", DbType="NVarChar(100)")]
	public string TypeOfRepair
	{
		get
		{
			return this._TypeOfRepair;
		}
		set
		{
			if ((this._TypeOfRepair != value))
			{
				this.OnTypeOfRepairChanging(value);
				this.SendPropertyChanging();
				this._TypeOfRepair = value;
				this.SendPropertyChanged("TypeOfRepair");
				this.OnTypeOfRepairChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualRepair", DbType="NVarChar(50)")]
	public string ActualRepair
	{
		get
		{
			return this._ActualRepair;
		}
		set
		{
			if ((this._ActualRepair != value))
			{
				this.OnActualRepairChanging(value);
				this.SendPropertyChanging();
				this._ActualRepair = value;
				this.SendPropertyChanged("ActualRepair");
				this.OnActualRepairChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostOfRepairParts", DbType="Float")]
	public System.Nullable<double> CostOfRepairParts
	{
		get
		{
			return this._CostOfRepairParts;
		}
		set
		{
			if ((this._CostOfRepairParts != value))
			{
				this.OnCostOfRepairPartsChanging(value);
				this.SendPropertyChanging();
				this._CostOfRepairParts = value;
				this.SendPropertyChanged("CostOfRepairParts");
				this.OnCostOfRepairPartsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostOfRepairLabor", DbType="Float")]
	public System.Nullable<double> CostOfRepairLabor
	{
		get
		{
			return this._CostOfRepairLabor;
		}
		set
		{
			if ((this._CostOfRepairLabor != value))
			{
				this.OnCostOfRepairLaborChanging(value);
				this.SendPropertyChanging();
				this._CostOfRepairLabor = value;
				this.SendPropertyChanged("CostOfRepairLabor");
				this.OnCostOfRepairLaborChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostOfRepairOutsource", DbType="Float")]
	public System.Nullable<double> CostOfRepairOutsource
	{
		get
		{
			return this._CostOfRepairOutsource;
		}
		set
		{
			if ((this._CostOfRepairOutsource != value))
			{
				this.OnCostOfRepairOutsourceChanging(value);
				this.SendPropertyChanging();
				this._CostOfRepairOutsource = value;
				this.SendPropertyChanged("CostOfRepairOutsource");
				this.OnCostOfRepairOutsourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scheduled_Unscheduled", DbType="NVarChar(50)")]
	public string Scheduled_Unscheduled
	{
		get
		{
			return this._Scheduled_Unscheduled;
		}
		set
		{
			if ((this._Scheduled_Unscheduled != value))
			{
				this.OnScheduled_UnscheduledChanging(value);
				this.SendPropertyChanging();
				this._Scheduled_Unscheduled = value;
				this.SendPropertyChanged("Scheduled_Unscheduled");
				this.OnScheduled_UnscheduledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownTime", DbType="NVarChar(50)")]
	public string DownTime
	{
		get
		{
			return this._DownTime;
		}
		set
		{
			if ((this._DownTime != value))
			{
				this.OnDownTimeChanging(value);
				this.SendPropertyChanging();
				this._DownTime = value;
				this.SendPropertyChanged("DownTime");
				this.OnDownTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preventive_Predictive_Reactive", DbType="NVarChar(50)")]
	public string Preventive_Predictive_Reactive
	{
		get
		{
			return this._Preventive_Predictive_Reactive;
		}
		set
		{
			if ((this._Preventive_Predictive_Reactive != value))
			{
				this.OnPreventive_Predictive_ReactiveChanging(value);
				this.SendPropertyChanging();
				this._Preventive_Predictive_Reactive = value;
				this.SendPropertyChanged("Preventive_Predictive_Reactive");
				this.OnPreventive_Predictive_ReactiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootCause", DbType="NVarChar(50)")]
	public string RootCause
	{
		get
		{
			return this._RootCause;
		}
		set
		{
			if ((this._RootCause != value))
			{
				this.OnRootCauseChanging(value);
				this.SendPropertyChanging();
				this._RootCause = value;
				this.SendPropertyChanged("RootCause");
				this.OnRootCauseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Countermeasure", DbType="NVarChar(50)")]
	public string Countermeasure
	{
		get
		{
			return this._Countermeasure;
		}
		set
		{
			if ((this._Countermeasure != value))
			{
				this.OnCountermeasureChanging(value);
				this.SendPropertyChanging();
				this._Countermeasure = value;
				this.SendPropertyChanged("Countermeasure");
				this.OnCountermeasureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Report")]
public partial class tbl_Report : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ReportID;
	
	private System.Nullable<int> _ProcessID;
	
	private string _ProcessObjID;
	
	private string _AttributeName;
	
	private string _ReportName;
	
	private System.Nullable<int> _ReportTypeID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnProcessObjIDChanging(string value);
    partial void OnProcessObjIDChanged();
    partial void OnAttributeNameChanging(string value);
    partial void OnAttributeNameChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnReportTypeIDChanging(System.Nullable<int> value);
    partial void OnReportTypeIDChanged();
    #endregion
	
	public tbl_Report()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ReportID
	{
		get
		{
			return this._ReportID;
		}
		set
		{
			if ((this._ReportID != value))
			{
				this.OnReportIDChanging(value);
				this.SendPropertyChanging();
				this._ReportID = value;
				this.SendPropertyChanged("ReportID");
				this.OnReportIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjID", DbType="NVarChar(MAX)")]
	public string ProcessObjID
	{
		get
		{
			return this._ProcessObjID;
		}
		set
		{
			if ((this._ProcessObjID != value))
			{
				this.OnProcessObjIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjID = value;
				this.SendPropertyChanged("ProcessObjID");
				this.OnProcessObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(MAX)")]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this.OnAttributeNameChanging(value);
				this.SendPropertyChanging();
				this._AttributeName = value;
				this.SendPropertyChanged("AttributeName");
				this.OnAttributeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(100)")]
	public string ReportName
	{
		get
		{
			return this._ReportName;
		}
		set
		{
			if ((this._ReportName != value))
			{
				this.OnReportNameChanging(value);
				this.SendPropertyChanging();
				this._ReportName = value;
				this.SendPropertyChanged("ReportName");
				this.OnReportNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeID", DbType="Int")]
	public System.Nullable<int> ReportTypeID
	{
		get
		{
			return this._ReportTypeID;
		}
		set
		{
			if ((this._ReportTypeID != value))
			{
				this.OnReportTypeIDChanging(value);
				this.SendPropertyChanging();
				this._ReportTypeID = value;
				this.SendPropertyChanged("ReportTypeID");
				this.OnReportTypeIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Role")]
public partial class tbl_Role
{
	
	private System.Nullable<int> _ID;
	
	private string _Role;
	
	public tbl_Role()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
	public System.Nullable<int> ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50)")]
	public string Role
	{
		get
		{
			return this._Role;
		}
		set
		{
			if ((this._Role != value))
			{
				this._Role = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SubAssembly")]
public partial class tbl_SubAssembly : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SubAssemblyID;
	
	private System.Nullable<int> _AssemblyID;
	
	private string _SubAssemblyName;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubAssemblyIDChanging(int value);
    partial void OnSubAssemblyIDChanged();
    partial void OnAssemblyIDChanging(System.Nullable<int> value);
    partial void OnAssemblyIDChanged();
    partial void OnSubAssemblyNameChanging(string value);
    partial void OnSubAssemblyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_SubAssembly()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAssemblyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SubAssemblyID
	{
		get
		{
			return this._SubAssemblyID;
		}
		set
		{
			if ((this._SubAssemblyID != value))
			{
				this.OnSubAssemblyIDChanging(value);
				this.SendPropertyChanging();
				this._SubAssemblyID = value;
				this.SendPropertyChanged("SubAssemblyID");
				this.OnSubAssemblyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyID", DbType="Int")]
	public System.Nullable<int> AssemblyID
	{
		get
		{
			return this._AssemblyID;
		}
		set
		{
			if ((this._AssemblyID != value))
			{
				this.OnAssemblyIDChanging(value);
				this.SendPropertyChanging();
				this._AssemblyID = value;
				this.SendPropertyChanged("AssemblyID");
				this.OnAssemblyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAssemblyName", DbType="NVarChar(100)")]
	public string SubAssemblyName
	{
		get
		{
			return this._SubAssemblyName;
		}
		set
		{
			if ((this._SubAssemblyName != value))
			{
				this.OnSubAssemblyNameChanging(value);
				this.SendPropertyChanging();
				this._SubAssemblyName = value;
				this.SendPropertyChanged("SubAssemblyName");
				this.OnSubAssemblyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Summary")]
public partial class tbl_Summary : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SummaryID;
	
	private string _SummaryName;
	
	private System.Nullable<int> _ProcessID;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSummaryIDChanging(int value);
    partial void OnSummaryIDChanged();
    partial void OnSummaryNameChanging(string value);
    partial void OnSummaryNameChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_Summary()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SummaryID
	{
		get
		{
			return this._SummaryID;
		}
		set
		{
			if ((this._SummaryID != value))
			{
				this.OnSummaryIDChanging(value);
				this.SendPropertyChanging();
				this._SummaryID = value;
				this.SendPropertyChanged("SummaryID");
				this.OnSummaryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryName", DbType="NVarChar(100)")]
	public string SummaryName
	{
		get
		{
			return this._SummaryName;
		}
		set
		{
			if ((this._SummaryName != value))
			{
				this.OnSummaryNameChanging(value);
				this.SendPropertyChanging();
				this._SummaryName = value;
				this.SendPropertyChanged("SummaryName");
				this.OnSummaryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SummaryAttributeMenu")]
public partial class tbl_SummaryAttributeMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SumryAttriMenuID;
	
	private string _SumryAttriMenuName;
	
	private string _SumryAttriMenuValue;
	
	private System.Nullable<int> _SummaryID;
	
	private System.Nullable<bool> _IncludeOnMap;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSumryAttriMenuIDChanging(int value);
    partial void OnSumryAttriMenuIDChanged();
    partial void OnSumryAttriMenuNameChanging(string value);
    partial void OnSumryAttriMenuNameChanged();
    partial void OnSumryAttriMenuValueChanging(string value);
    partial void OnSumryAttriMenuValueChanged();
    partial void OnSummaryIDChanging(System.Nullable<int> value);
    partial void OnSummaryIDChanged();
    partial void OnIncludeOnMapChanging(System.Nullable<bool> value);
    partial void OnIncludeOnMapChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_SummaryAttributeMenu()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumryAttriMenuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SumryAttriMenuID
	{
		get
		{
			return this._SumryAttriMenuID;
		}
		set
		{
			if ((this._SumryAttriMenuID != value))
			{
				this.OnSumryAttriMenuIDChanging(value);
				this.SendPropertyChanging();
				this._SumryAttriMenuID = value;
				this.SendPropertyChanged("SumryAttriMenuID");
				this.OnSumryAttriMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumryAttriMenuName", DbType="NVarChar(150)")]
	public string SumryAttriMenuName
	{
		get
		{
			return this._SumryAttriMenuName;
		}
		set
		{
			if ((this._SumryAttriMenuName != value))
			{
				this.OnSumryAttriMenuNameChanging(value);
				this.SendPropertyChanging();
				this._SumryAttriMenuName = value;
				this.SendPropertyChanged("SumryAttriMenuName");
				this.OnSumryAttriMenuNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumryAttriMenuValue", DbType="NVarChar(150)")]
	public string SumryAttriMenuValue
	{
		get
		{
			return this._SumryAttriMenuValue;
		}
		set
		{
			if ((this._SumryAttriMenuValue != value))
			{
				this.OnSumryAttriMenuValueChanging(value);
				this.SendPropertyChanging();
				this._SumryAttriMenuValue = value;
				this.SendPropertyChanged("SumryAttriMenuValue");
				this.OnSumryAttriMenuValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryID", DbType="Int")]
	public System.Nullable<int> SummaryID
	{
		get
		{
			return this._SummaryID;
		}
		set
		{
			if ((this._SummaryID != value))
			{
				this.OnSummaryIDChanging(value);
				this.SendPropertyChanging();
				this._SummaryID = value;
				this.SendPropertyChanged("SummaryID");
				this.OnSummaryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeOnMap", DbType="Bit")]
	public System.Nullable<bool> IncludeOnMap
	{
		get
		{
			return this._IncludeOnMap;
		}
		set
		{
			if ((this._IncludeOnMap != value))
			{
				this.OnIncludeOnMapChanging(value);
				this.SendPropertyChanging();
				this._IncludeOnMap = value;
				this.SendPropertyChanged("IncludeOnMap");
				this.OnIncludeOnMapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SummaryData")]
public partial class tbl_SummaryData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _ProcessID;
	
	private string _AttributeName;
	
	private System.Nullable<int> _FunctionName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnAttributeNameChanging(string value);
    partial void OnAttributeNameChanged();
    partial void OnFunctionNameChanging(System.Nullable<int> value);
    partial void OnFunctionNameChanged();
    #endregion
	
	public tbl_SummaryData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(200)")]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this.OnAttributeNameChanging(value);
				this.SendPropertyChanging();
				this._AttributeName = value;
				this.SendPropertyChanged("AttributeName");
				this.OnAttributeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="Int")]
	public System.Nullable<int> FunctionName
	{
		get
		{
			return this._FunctionName;
		}
		set
		{
			if ((this._FunctionName != value))
			{
				this.OnFunctionNameChanging(value);
				this.SendPropertyChanging();
				this._FunctionName = value;
				this.SendPropertyChanged("FunctionName");
				this.OnFunctionNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_System")]
public partial class tbl_System : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SystemID;
	
	private System.Nullable<int> _BusinessSegmentID;
	
	private string _SystemName;
	
	private System.Nullable<int> _ParentID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemIDChanging(int value);
    partial void OnSystemIDChanged();
    partial void OnBusinessSegmentIDChanging(System.Nullable<int> value);
    partial void OnBusinessSegmentIDChanged();
    partial void OnSystemNameChanging(string value);
    partial void OnSystemNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_System()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SystemID
	{
		get
		{
			return this._SystemID;
		}
		set
		{
			if ((this._SystemID != value))
			{
				this.OnSystemIDChanging(value);
				this.SendPropertyChanging();
				this._SystemID = value;
				this.SendPropertyChanged("SystemID");
				this.OnSystemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessSegmentID", DbType="Int")]
	public System.Nullable<int> BusinessSegmentID
	{
		get
		{
			return this._BusinessSegmentID;
		}
		set
		{
			if ((this._BusinessSegmentID != value))
			{
				this.OnBusinessSegmentIDChanging(value);
				this.SendPropertyChanging();
				this._BusinessSegmentID = value;
				this.SendPropertyChanged("BusinessSegmentID");
				this.OnBusinessSegmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemName", DbType="NVarChar(100)")]
	public string SystemName
	{
		get
		{
			return this._SystemName;
		}
		set
		{
			if ((this._SystemName != value))
			{
				this.OnSystemNameChanging(value);
				this.SendPropertyChanging();
				this._SystemName = value;
				this.SendPropertyChanged("SystemName");
				this.OnSystemNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SystemIO")]
public partial class tbl_SystemIO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SytemIOID;
	
	private System.Nullable<int> _FromActivityID;
	
	private System.Nullable<int> _ToActivityID;
	
	private System.Nullable<int> _SystemID;
	
	private System.Nullable<int> _Type;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSytemIOIDChanging(int value);
    partial void OnSytemIOIDChanged();
    partial void OnFromActivityIDChanging(System.Nullable<int> value);
    partial void OnFromActivityIDChanged();
    partial void OnToActivityIDChanging(System.Nullable<int> value);
    partial void OnToActivityIDChanged();
    partial void OnSystemIDChanging(System.Nullable<int> value);
    partial void OnSystemIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public tbl_SystemIO()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SytemIOID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SytemIOID
	{
		get
		{
			return this._SytemIOID;
		}
		set
		{
			if ((this._SytemIOID != value))
			{
				this.OnSytemIOIDChanging(value);
				this.SendPropertyChanging();
				this._SytemIOID = value;
				this.SendPropertyChanged("SytemIOID");
				this.OnSytemIOIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromActivityID", DbType="Int")]
	public System.Nullable<int> FromActivityID
	{
		get
		{
			return this._FromActivityID;
		}
		set
		{
			if ((this._FromActivityID != value))
			{
				this.OnFromActivityIDChanging(value);
				this.SendPropertyChanging();
				this._FromActivityID = value;
				this.SendPropertyChanged("FromActivityID");
				this.OnFromActivityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToActivityID", DbType="Int")]
	public System.Nullable<int> ToActivityID
	{
		get
		{
			return this._ToActivityID;
		}
		set
		{
			if ((this._ToActivityID != value))
			{
				this.OnToActivityIDChanging(value);
				this.SendPropertyChanging();
				this._ToActivityID = value;
				this.SendPropertyChanged("ToActivityID");
				this.OnToActivityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="Int")]
	public System.Nullable<int> SystemID
	{
		get
		{
			return this._SystemID;
		}
		set
		{
			if ((this._SystemID != value))
			{
				this.OnSystemIDChanging(value);
				this.SendPropertyChanging();
				this._SystemID = value;
				this.SendPropertyChanged("SystemID");
				this.OnSystemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
	public System.Nullable<int> Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SystemProcessIO")]
public partial class tbl_SystemProcessIO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SysID;
	
	private System.Nullable<int> _SystemID;
	
	private System.Nullable<int> _ProcessID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIDChanging(int value);
    partial void OnSysIDChanged();
    partial void OnSystemIDChanging(System.Nullable<int> value);
    partial void OnSystemIDChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public tbl_SystemProcessIO()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SysID
	{
		get
		{
			return this._SysID;
		}
		set
		{
			if ((this._SysID != value))
			{
				this.OnSysIDChanging(value);
				this.SendPropertyChanging();
				this._SysID = value;
				this.SendPropertyChanged("SysID");
				this.OnSysIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="Int")]
	public System.Nullable<int> SystemID
	{
		get
		{
			return this._SystemID;
		}
		set
		{
			if ((this._SystemID != value))
			{
				this.OnSystemIDChanging(value);
				this.SendPropertyChanging();
				this._SystemID = value;
				this.SendPropertyChanged("SystemID");
				this.OnSystemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Target")]
public partial class tbl_Target : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TargetID;
	
	private string _TargetName;
	
	private string _FunctionName;
	
	private System.Nullable<int> _SystemID;
	
	private System.Nullable<int> _TypeID;
	
	private System.Nullable<int> _ParentID;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _UserRegisterID;
	
	private System.Nullable<int> _CompanyID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnTargetNameChanging(string value);
    partial void OnTargetNameChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnSystemIDChanging(System.Nullable<int> value);
    partial void OnSystemIDChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnUserRegisterIDChanging(System.Nullable<int> value);
    partial void OnUserRegisterIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
	
	public tbl_Target()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TargetID
	{
		get
		{
			return this._TargetID;
		}
		set
		{
			if ((this._TargetID != value))
			{
				this.OnTargetIDChanging(value);
				this.SendPropertyChanging();
				this._TargetID = value;
				this.SendPropertyChanged("TargetID");
				this.OnTargetIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetName", DbType="NVarChar(100)")]
	public string TargetName
	{
		get
		{
			return this._TargetName;
		}
		set
		{
			if ((this._TargetName != value))
			{
				this.OnTargetNameChanging(value);
				this.SendPropertyChanging();
				this._TargetName = value;
				this.SendPropertyChanged("TargetName");
				this.OnTargetNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="NVarChar(200)")]
	public string FunctionName
	{
		get
		{
			return this._FunctionName;
		}
		set
		{
			if ((this._FunctionName != value))
			{
				this.OnFunctionNameChanging(value);
				this.SendPropertyChanging();
				this._FunctionName = value;
				this.SendPropertyChanged("FunctionName");
				this.OnFunctionNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="Int")]
	public System.Nullable<int> SystemID
	{
		get
		{
			return this._SystemID;
		}
		set
		{
			if ((this._SystemID != value))
			{
				this.OnSystemIDChanging(value);
				this.SendPropertyChanging();
				this._SystemID = value;
				this.SendPropertyChanged("SystemID");
				this.OnSystemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
	public System.Nullable<int> TypeID
	{
		get
		{
			return this._TypeID;
		}
		set
		{
			if ((this._TypeID != value))
			{
				this.OnTypeIDChanging(value);
				this.SendPropertyChanging();
				this._TypeID = value;
				this.SendPropertyChanged("TypeID");
				this.OnTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRegisterID", DbType="Int")]
	public System.Nullable<int> UserRegisterID
	{
		get
		{
			return this._UserRegisterID;
		}
		set
		{
			if ((this._UserRegisterID != value))
			{
				this.OnUserRegisterIDChanging(value);
				this.SendPropertyChanging();
				this._UserRegisterID = value;
				this.SendPropertyChanged("UserRegisterID");
				this.OnUserRegisterIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
	public System.Nullable<int> CompanyID
	{
		get
		{
			return this._CompanyID;
		}
		set
		{
			if ((this._CompanyID != value))
			{
				this.OnCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._CompanyID = value;
				this.SendPropertyChanged("CompanyID");
				this.OnCompanyIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TargetObjects")]
public partial class tbl_TargetObject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TargetObjID;
	
	private string _TargetObjName;
	
	private System.Nullable<int> _TargetID;
	
	private System.Nullable<int> _OrderNo;
	
	private System.Nullable<int> _Type;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
	private System.Nullable<int> _XTop;
	
	private System.Nullable<int> _YLeft;
	
	private System.Nullable<int> _Width;
	
	private System.Nullable<int> _Height;
	
	private string _Title;
	
	private System.Nullable<int> _ParallelTargetObjID;
	
	private System.Nullable<int> _Position;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTargetObjIDChanging(int value);
    partial void OnTargetObjIDChanged();
    partial void OnTargetObjNameChanging(string value);
    partial void OnTargetObjNameChanged();
    partial void OnTargetIDChanging(System.Nullable<int> value);
    partial void OnTargetIDChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnXTopChanging(System.Nullable<int> value);
    partial void OnXTopChanged();
    partial void OnYLeftChanging(System.Nullable<int> value);
    partial void OnYLeftChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnParallelTargetObjIDChanging(System.Nullable<int> value);
    partial void OnParallelTargetObjIDChanged();
    partial void OnPositionChanging(System.Nullable<int> value);
    partial void OnPositionChanged();
    #endregion
	
	public tbl_TargetObject()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObjID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TargetObjID
	{
		get
		{
			return this._TargetObjID;
		}
		set
		{
			if ((this._TargetObjID != value))
			{
				this.OnTargetObjIDChanging(value);
				this.SendPropertyChanging();
				this._TargetObjID = value;
				this.SendPropertyChanged("TargetObjID");
				this.OnTargetObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObjName", DbType="NVarChar(100)")]
	public string TargetObjName
	{
		get
		{
			return this._TargetObjName;
		}
		set
		{
			if ((this._TargetObjName != value))
			{
				this.OnTargetObjNameChanging(value);
				this.SendPropertyChanging();
				this._TargetObjName = value;
				this.SendPropertyChanged("TargetObjName");
				this.OnTargetObjNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int")]
	public System.Nullable<int> TargetID
	{
		get
		{
			return this._TargetID;
		}
		set
		{
			if ((this._TargetID != value))
			{
				this.OnTargetIDChanging(value);
				this.SendPropertyChanging();
				this._TargetID = value;
				this.SendPropertyChanged("TargetID");
				this.OnTargetIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<int> OrderNo
	{
		get
		{
			return this._OrderNo;
		}
		set
		{
			if ((this._OrderNo != value))
			{
				this.OnOrderNoChanging(value);
				this.SendPropertyChanging();
				this._OrderNo = value;
				this.SendPropertyChanged("OrderNo");
				this.OnOrderNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
	public System.Nullable<int> Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XTop", DbType="Int")]
	public System.Nullable<int> XTop
	{
		get
		{
			return this._XTop;
		}
		set
		{
			if ((this._XTop != value))
			{
				this.OnXTopChanging(value);
				this.SendPropertyChanging();
				this._XTop = value;
				this.SendPropertyChanged("XTop");
				this.OnXTopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YLeft", DbType="Int")]
	public System.Nullable<int> YLeft
	{
		get
		{
			return this._YLeft;
		}
		set
		{
			if ((this._YLeft != value))
			{
				this.OnYLeftChanging(value);
				this.SendPropertyChanging();
				this._YLeft = value;
				this.SendPropertyChanged("YLeft");
				this.OnYLeftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
	public System.Nullable<int> Width
	{
		get
		{
			return this._Width;
		}
		set
		{
			if ((this._Width != value))
			{
				this.OnWidthChanging(value);
				this.SendPropertyChanging();
				this._Width = value;
				this.SendPropertyChanged("Width");
				this.OnWidthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
	public System.Nullable<int> Height
	{
		get
		{
			return this._Height;
		}
		set
		{
			if ((this._Height != value))
			{
				this.OnHeightChanging(value);
				this.SendPropertyChanging();
				this._Height = value;
				this.SendPropertyChanged("Height");
				this.OnHeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParallelTargetObjID", DbType="Int")]
	public System.Nullable<int> ParallelTargetObjID
	{
		get
		{
			return this._ParallelTargetObjID;
		}
		set
		{
			if ((this._ParallelTargetObjID != value))
			{
				this.OnParallelTargetObjIDChanging(value);
				this.SendPropertyChanging();
				this._ParallelTargetObjID = value;
				this.SendPropertyChanged("ParallelTargetObjID");
				this.OnParallelTargetObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int")]
	public System.Nullable<int> Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TargetParallelRelationship")]
public partial class tbl_TargetParallelRelationship : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _TargetObjID;
	
	private System.Nullable<int> _NeighbourActivityID;
	
	private System.Nullable<int> _Type;
	
	private System.Nullable<int> _TargetID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTargetObjIDChanging(System.Nullable<int> value);
    partial void OnTargetObjIDChanged();
    partial void OnNeighbourActivityIDChanging(System.Nullable<int> value);
    partial void OnNeighbourActivityIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnTargetIDChanging(System.Nullable<int> value);
    partial void OnTargetIDChanged();
    #endregion
	
	public tbl_TargetParallelRelationship()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetObjID", DbType="Int")]
	public System.Nullable<int> TargetObjID
	{
		get
		{
			return this._TargetObjID;
		}
		set
		{
			if ((this._TargetObjID != value))
			{
				this.OnTargetObjIDChanging(value);
				this.SendPropertyChanging();
				this._TargetObjID = value;
				this.SendPropertyChanged("TargetObjID");
				this.OnTargetObjIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeighbourActivityID", DbType="Int")]
	public System.Nullable<int> NeighbourActivityID
	{
		get
		{
			return this._NeighbourActivityID;
		}
		set
		{
			if ((this._NeighbourActivityID != value))
			{
				this.OnNeighbourActivityIDChanging(value);
				this.SendPropertyChanging();
				this._NeighbourActivityID = value;
				this.SendPropertyChanged("NeighbourActivityID");
				this.OnNeighbourActivityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
	public System.Nullable<int> Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int")]
	public System.Nullable<int> TargetID
	{
		get
		{
			return this._TargetID;
		}
		set
		{
			if ((this._TargetID != value))
			{
				this.OnTargetIDChanging(value);
				this.SendPropertyChanging();
				this._TargetID = value;
				this.SendPropertyChanged("TargetID");
				this.OnTargetIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TFG")]
public partial class tbl_TFG : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TFGID;
	
	private System.Nullable<int> _ProcessObjectID;
	
	private string _Tool_Fixture_GageName;
	
	private string _TFGDescription;
	
	private string _TFGVendorPart;
	
	private string _TFGVendor;
	
	private System.Nullable<int> _TFGVendorID;
	
	private System.Nullable<double> _TFGCost;
	
	private System.Nullable<double> _TFGQty;
	
	private string _CalibrationCycle;
	
	private string _TimeToCailbrate;
	
	private System.Nullable<double> _CostToCalibrate;
	
	private string _CalibrationVendor;
	
	private System.Nullable<int> _CalibrationVendorID;
	
	private string _CalibrationVendorInfo;
	
	private string _CalibratedBy;
	
	private System.Nullable<System.DateTime> _CalibrationDate1;
	
	private System.Nullable<System.DateTime> _CalibrationDate2;
	
	private System.Nullable<System.DateTime> _CalibrationDate3;
	
	private System.Nullable<System.DateTime> _CalibrationDate4;
	
	private System.Nullable<System.DateTime> _CalibrationDate5;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTFGIDChanging(int value);
    partial void OnTFGIDChanged();
    partial void OnProcessObjectIDChanging(System.Nullable<int> value);
    partial void OnProcessObjectIDChanged();
    partial void OnTool_Fixture_GageNameChanging(string value);
    partial void OnTool_Fixture_GageNameChanged();
    partial void OnTFGDescriptionChanging(string value);
    partial void OnTFGDescriptionChanged();
    partial void OnTFGVendorPartChanging(string value);
    partial void OnTFGVendorPartChanged();
    partial void OnTFGVendorChanging(string value);
    partial void OnTFGVendorChanged();
    partial void OnTFGVendorIDChanging(System.Nullable<int> value);
    partial void OnTFGVendorIDChanged();
    partial void OnTFGCostChanging(System.Nullable<double> value);
    partial void OnTFGCostChanged();
    partial void OnTFGQtyChanging(System.Nullable<double> value);
    partial void OnTFGQtyChanged();
    partial void OnCalibrationCycleChanging(string value);
    partial void OnCalibrationCycleChanged();
    partial void OnTimeToCailbrateChanging(string value);
    partial void OnTimeToCailbrateChanged();
    partial void OnCostToCalibrateChanging(System.Nullable<double> value);
    partial void OnCostToCalibrateChanged();
    partial void OnCalibrationVendorChanging(string value);
    partial void OnCalibrationVendorChanged();
    partial void OnCalibrationVendorIDChanging(System.Nullable<int> value);
    partial void OnCalibrationVendorIDChanged();
    partial void OnCalibrationVendorInfoChanging(string value);
    partial void OnCalibrationVendorInfoChanged();
    partial void OnCalibratedByChanging(string value);
    partial void OnCalibratedByChanged();
    partial void OnCalibrationDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnCalibrationDate1Changed();
    partial void OnCalibrationDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnCalibrationDate2Changed();
    partial void OnCalibrationDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnCalibrationDate3Changed();
    partial void OnCalibrationDate4Changing(System.Nullable<System.DateTime> value);
    partial void OnCalibrationDate4Changed();
    partial void OnCalibrationDate5Changing(System.Nullable<System.DateTime> value);
    partial void OnCalibrationDate5Changed();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_TFG()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TFGID
	{
		get
		{
			return this._TFGID;
		}
		set
		{
			if ((this._TFGID != value))
			{
				this.OnTFGIDChanging(value);
				this.SendPropertyChanging();
				this._TFGID = value;
				this.SendPropertyChanged("TFGID");
				this.OnTFGIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessObjectID", DbType="Int")]
	public System.Nullable<int> ProcessObjectID
	{
		get
		{
			return this._ProcessObjectID;
		}
		set
		{
			if ((this._ProcessObjectID != value))
			{
				this.OnProcessObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessObjectID = value;
				this.SendPropertyChanged("ProcessObjectID");
				this.OnProcessObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tool_Fixture_GageName", DbType="NVarChar(50)")]
	public string Tool_Fixture_GageName
	{
		get
		{
			return this._Tool_Fixture_GageName;
		}
		set
		{
			if ((this._Tool_Fixture_GageName != value))
			{
				this.OnTool_Fixture_GageNameChanging(value);
				this.SendPropertyChanging();
				this._Tool_Fixture_GageName = value;
				this.SendPropertyChanged("Tool_Fixture_GageName");
				this.OnTool_Fixture_GageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGDescription", DbType="NVarChar(MAX)")]
	public string TFGDescription
	{
		get
		{
			return this._TFGDescription;
		}
		set
		{
			if ((this._TFGDescription != value))
			{
				this.OnTFGDescriptionChanging(value);
				this.SendPropertyChanging();
				this._TFGDescription = value;
				this.SendPropertyChanged("TFGDescription");
				this.OnTFGDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGVendorPart", DbType="NVarChar(50)")]
	public string TFGVendorPart
	{
		get
		{
			return this._TFGVendorPart;
		}
		set
		{
			if ((this._TFGVendorPart != value))
			{
				this.OnTFGVendorPartChanging(value);
				this.SendPropertyChanging();
				this._TFGVendorPart = value;
				this.SendPropertyChanged("TFGVendorPart");
				this.OnTFGVendorPartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGVendor", DbType="NVarChar(50)")]
	public string TFGVendor
	{
		get
		{
			return this._TFGVendor;
		}
		set
		{
			if ((this._TFGVendor != value))
			{
				this.OnTFGVendorChanging(value);
				this.SendPropertyChanging();
				this._TFGVendor = value;
				this.SendPropertyChanged("TFGVendor");
				this.OnTFGVendorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGVendorID", DbType="Int")]
	public System.Nullable<int> TFGVendorID
	{
		get
		{
			return this._TFGVendorID;
		}
		set
		{
			if ((this._TFGVendorID != value))
			{
				this.OnTFGVendorIDChanging(value);
				this.SendPropertyChanging();
				this._TFGVendorID = value;
				this.SendPropertyChanged("TFGVendorID");
				this.OnTFGVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGCost", DbType="Float")]
	public System.Nullable<double> TFGCost
	{
		get
		{
			return this._TFGCost;
		}
		set
		{
			if ((this._TFGCost != value))
			{
				this.OnTFGCostChanging(value);
				this.SendPropertyChanging();
				this._TFGCost = value;
				this.SendPropertyChanged("TFGCost");
				this.OnTFGCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGQty", DbType="Float")]
	public System.Nullable<double> TFGQty
	{
		get
		{
			return this._TFGQty;
		}
		set
		{
			if ((this._TFGQty != value))
			{
				this.OnTFGQtyChanging(value);
				this.SendPropertyChanging();
				this._TFGQty = value;
				this.SendPropertyChanged("TFGQty");
				this.OnTFGQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationCycle", DbType="NVarChar(50)")]
	public string CalibrationCycle
	{
		get
		{
			return this._CalibrationCycle;
		}
		set
		{
			if ((this._CalibrationCycle != value))
			{
				this.OnCalibrationCycleChanging(value);
				this.SendPropertyChanging();
				this._CalibrationCycle = value;
				this.SendPropertyChanged("CalibrationCycle");
				this.OnCalibrationCycleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeToCailbrate", DbType="NVarChar(50)")]
	public string TimeToCailbrate
	{
		get
		{
			return this._TimeToCailbrate;
		}
		set
		{
			if ((this._TimeToCailbrate != value))
			{
				this.OnTimeToCailbrateChanging(value);
				this.SendPropertyChanging();
				this._TimeToCailbrate = value;
				this.SendPropertyChanged("TimeToCailbrate");
				this.OnTimeToCailbrateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostToCalibrate", DbType="Float")]
	public System.Nullable<double> CostToCalibrate
	{
		get
		{
			return this._CostToCalibrate;
		}
		set
		{
			if ((this._CostToCalibrate != value))
			{
				this.OnCostToCalibrateChanging(value);
				this.SendPropertyChanging();
				this._CostToCalibrate = value;
				this.SendPropertyChanged("CostToCalibrate");
				this.OnCostToCalibrateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationVendor", DbType="NVarChar(50)")]
	public string CalibrationVendor
	{
		get
		{
			return this._CalibrationVendor;
		}
		set
		{
			if ((this._CalibrationVendor != value))
			{
				this.OnCalibrationVendorChanging(value);
				this.SendPropertyChanging();
				this._CalibrationVendor = value;
				this.SendPropertyChanged("CalibrationVendor");
				this.OnCalibrationVendorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationVendorID", DbType="Int")]
	public System.Nullable<int> CalibrationVendorID
	{
		get
		{
			return this._CalibrationVendorID;
		}
		set
		{
			if ((this._CalibrationVendorID != value))
			{
				this.OnCalibrationVendorIDChanging(value);
				this.SendPropertyChanging();
				this._CalibrationVendorID = value;
				this.SendPropertyChanged("CalibrationVendorID");
				this.OnCalibrationVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationVendorInfo", DbType="NVarChar(50)")]
	public string CalibrationVendorInfo
	{
		get
		{
			return this._CalibrationVendorInfo;
		}
		set
		{
			if ((this._CalibrationVendorInfo != value))
			{
				this.OnCalibrationVendorInfoChanging(value);
				this.SendPropertyChanging();
				this._CalibrationVendorInfo = value;
				this.SendPropertyChanged("CalibrationVendorInfo");
				this.OnCalibrationVendorInfoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibratedBy", DbType="NVarChar(50)")]
	public string CalibratedBy
	{
		get
		{
			return this._CalibratedBy;
		}
		set
		{
			if ((this._CalibratedBy != value))
			{
				this.OnCalibratedByChanging(value);
				this.SendPropertyChanging();
				this._CalibratedBy = value;
				this.SendPropertyChanged("CalibratedBy");
				this.OnCalibratedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationDate1", DbType="Date")]
	public System.Nullable<System.DateTime> CalibrationDate1
	{
		get
		{
			return this._CalibrationDate1;
		}
		set
		{
			if ((this._CalibrationDate1 != value))
			{
				this.OnCalibrationDate1Changing(value);
				this.SendPropertyChanging();
				this._CalibrationDate1 = value;
				this.SendPropertyChanged("CalibrationDate1");
				this.OnCalibrationDate1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationDate2", DbType="Date")]
	public System.Nullable<System.DateTime> CalibrationDate2
	{
		get
		{
			return this._CalibrationDate2;
		}
		set
		{
			if ((this._CalibrationDate2 != value))
			{
				this.OnCalibrationDate2Changing(value);
				this.SendPropertyChanging();
				this._CalibrationDate2 = value;
				this.SendPropertyChanged("CalibrationDate2");
				this.OnCalibrationDate2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationDate3", DbType="Date")]
	public System.Nullable<System.DateTime> CalibrationDate3
	{
		get
		{
			return this._CalibrationDate3;
		}
		set
		{
			if ((this._CalibrationDate3 != value))
			{
				this.OnCalibrationDate3Changing(value);
				this.SendPropertyChanging();
				this._CalibrationDate3 = value;
				this.SendPropertyChanged("CalibrationDate3");
				this.OnCalibrationDate3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationDate4", DbType="Date")]
	public System.Nullable<System.DateTime> CalibrationDate4
	{
		get
		{
			return this._CalibrationDate4;
		}
		set
		{
			if ((this._CalibrationDate4 != value))
			{
				this.OnCalibrationDate4Changing(value);
				this.SendPropertyChanging();
				this._CalibrationDate4 = value;
				this.SendPropertyChanged("CalibrationDate4");
				this.OnCalibrationDate4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationDate5", DbType="Date")]
	public System.Nullable<System.DateTime> CalibrationDate5
	{
		get
		{
			return this._CalibrationDate5;
		}
		set
		{
			if ((this._CalibrationDate5 != value))
			{
				this.OnCalibrationDate5Changing(value);
				this.SendPropertyChanging();
				this._CalibrationDate5 = value;
				this.SendPropertyChanged("CalibrationDate5");
				this.OnCalibrationDate5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TFGVendor")]
public partial class tbl_TFGVendor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TFGVendorID;
	
	private string _TFGVendor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTFGVendorIDChanging(int value);
    partial void OnTFGVendorIDChanged();
    partial void OnTFGVendorChanging(string value);
    partial void OnTFGVendorChanged();
    #endregion
	
	public tbl_TFGVendor()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGVendorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TFGVendorID
	{
		get
		{
			return this._TFGVendorID;
		}
		set
		{
			if ((this._TFGVendorID != value))
			{
				this.OnTFGVendorIDChanging(value);
				this.SendPropertyChanging();
				this._TFGVendorID = value;
				this.SendPropertyChanged("TFGVendorID");
				this.OnTFGVendorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFGVendor", DbType="NVarChar(500)")]
	public string TFGVendor
	{
		get
		{
			return this._TFGVendor;
		}
		set
		{
			if ((this._TFGVendor != value))
			{
				this.OnTFGVendorChanging(value);
				this.SendPropertyChanging();
				this._TFGVendor = value;
				this.SendPropertyChanged("TFGVendor");
				this.OnTFGVendorChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TypeCollection")]
public partial class tbl_TypeCollection
{
	
	private int _TypeID;
	
	private string _TypeName;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	public tbl_TypeCollection()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
	public int TypeID
	{
		get
		{
			return this._TypeID;
		}
		set
		{
			if ((this._TypeID != value))
			{
				this._TypeID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100)")]
	public string TypeName
	{
		get
		{
			return this._TypeName;
		}
		set
		{
			if ((this._TypeName != value))
			{
				this._TypeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this._CreatedDate = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Unit")]
public partial class tbl_Unit : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UnitID;
	
	private string _UnitName;
	
	private string _Symbol;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<System.DateTime> _ModifiedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
	
	public tbl_Unit()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
	public string UnitName
	{
		get
		{
			return this._UnitName;
		}
		set
		{
			if ((this._UnitName != value))
			{
				this.OnUnitNameChanging(value);
				this.SendPropertyChanging();
				this._UnitName = value;
				this.SendPropertyChanged("UnitName");
				this.OnUnitNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(10)")]
	public string Symbol
	{
		get
		{
			return this._Symbol;
		}
		set
		{
			if ((this._Symbol != value))
			{
				this.OnSymbolChanging(value);
				this.SendPropertyChanging();
				this._Symbol = value;
				this.SendPropertyChanged("Symbol");
				this.OnSymbolChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="Date")]
	public System.Nullable<System.DateTime> ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorInfos")]
public partial class ErrorInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ErrorID;
	
	private string _Error;
	
	private System.Nullable<int> _CycleTime;
	
	private System.Nullable<int> _CounterMeasureStrength;
	
	private System.Nullable<int> _CounterMeasure;
	
	private System.Nullable<int> _WorkContent;
	
	private System.Nullable<int> _ProcessID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(int value);
    partial void OnErrorIDChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnCycleTimeChanging(System.Nullable<int> value);
    partial void OnCycleTimeChanged();
    partial void OnCounterMeasureStrengthChanging(System.Nullable<int> value);
    partial void OnCounterMeasureStrengthChanged();
    partial void OnCounterMeasureChanging(System.Nullable<int> value);
    partial void OnCounterMeasureChanged();
    partial void OnWorkContentChanging(System.Nullable<int> value);
    partial void OnWorkContentChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    #endregion
	
	public ErrorInfo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ErrorID
	{
		get
		{
			return this._ErrorID;
		}
		set
		{
			if ((this._ErrorID != value))
			{
				this.OnErrorIDChanging(value);
				this.SendPropertyChanging();
				this._ErrorID = value;
				this.SendPropertyChanged("ErrorID");
				this.OnErrorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="VarChar(500)")]
	public string Error
	{
		get
		{
			return this._Error;
		}
		set
		{
			if ((this._Error != value))
			{
				this.OnErrorChanging(value);
				this.SendPropertyChanging();
				this._Error = value;
				this.SendPropertyChanged("Error");
				this.OnErrorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleTime", DbType="Int")]
	public System.Nullable<int> CycleTime
	{
		get
		{
			return this._CycleTime;
		}
		set
		{
			if ((this._CycleTime != value))
			{
				this.OnCycleTimeChanging(value);
				this.SendPropertyChanging();
				this._CycleTime = value;
				this.SendPropertyChanged("CycleTime");
				this.OnCycleTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterMeasureStrength", DbType="Int")]
	public System.Nullable<int> CounterMeasureStrength
	{
		get
		{
			return this._CounterMeasureStrength;
		}
		set
		{
			if ((this._CounterMeasureStrength != value))
			{
				this.OnCounterMeasureStrengthChanging(value);
				this.SendPropertyChanging();
				this._CounterMeasureStrength = value;
				this.SendPropertyChanged("CounterMeasureStrength");
				this.OnCounterMeasureStrengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CounterMeasure", DbType="Int")]
	public System.Nullable<int> CounterMeasure
	{
		get
		{
			return this._CounterMeasure;
		}
		set
		{
			if ((this._CounterMeasure != value))
			{
				this.OnCounterMeasureChanging(value);
				this.SendPropertyChanging();
				this._CounterMeasure = value;
				this.SendPropertyChanged("CounterMeasure");
				this.OnCounterMeasureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkContent", DbType="Int")]
	public System.Nullable<int> WorkContent
	{
		get
		{
			return this._WorkContent;
		}
		set
		{
			if ((this._WorkContent != value))
			{
				this.OnWorkContentChanging(value);
				this.SendPropertyChanging();
				this._WorkContent = value;
				this.SendPropertyChanged("WorkContent");
				this.OnWorkContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
	public System.Nullable<int> ProcessID
	{
		get
		{
			return this._ProcessID;
		}
		set
		{
			if ((this._ProcessID != value))
			{
				this.OnProcessIDChanging(value);
				this.SendPropertyChanging();
				this._ProcessID = value;
				this.SendPropertyChanged("ProcessID");
				this.OnProcessIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
